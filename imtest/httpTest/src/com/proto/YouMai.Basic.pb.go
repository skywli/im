// Code generated by protoc-gen-go.
// source: IM.Basic.proto
// DO NOT EDIT!

package youmai

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type COMMANDID int32

const (
	COMMANDID_HEART_BEAT                     COMMANDID = 1
	COMMANDID_HEART_BEAT_ACK                 COMMANDID = 2
	COMMANDID_ROUTE_REQ                      COMMANDID = 20
	COMMANDID_ROUTE_ONLINECHECK              COMMANDID = 21
	COMMANDID_ROUTE_ONLINECHECK_ACK          COMMANDID = 22
	COMMANDID_USER_LOGIN                     COMMANDID = 101
	COMMANDID_USER_LOGIN_ACK                 COMMANDID = 102
	COMMANDID_USER_LOGOFF                    COMMANDID = 103
	COMMANDID_USER_LOGOFF_ACK                COMMANDID = 104
	COMMANDID_MULTI_DEVICE_KICKED_NOTIFY     COMMANDID = 105
	COMMANDID_IM_TEXT                        COMMANDID = 106
	COMMANDID_IM_PICTURE                     COMMANDID = 107
	COMMANDID_IM_AUDIO                       COMMANDID = 108
	COMMANDID_IM_VIDEO                       COMMANDID = 109
	COMMANDID_IM_URL                         COMMANDID = 110
	COMMANDID_IM_LOCATION                    COMMANDID = 111
	COMMANDID_IM_LOCATION_SHARE_BEGIN        COMMANDID = 112
	COMMANDID_IM_LOCATION_SHARE_ANSWER       COMMANDID = 113
	COMMANDID_IM_LOCATION_SHARE_CONTINUE     COMMANDID = 114
	COMMANDID_IM_LOCATION_SHARE_END          COMMANDID = 115
	COMMANDID_PHONEDIAL                      COMMANDID = 117
	COMMANDID_PHONEDIAL_ACK                  COMMANDID = 118
	COMMANDID_GET_CONTACTS_INFO              COMMANDID = 119
	COMMANDID_GET_CONTACTS_INFO_ACK          COMMANDID = 120
	COMMANDID_PHP_USER_MODIFYSTATUS          COMMANDID = 121
	COMMANDID_PHP_USER_MODIFYSTATUS_ACK      COMMANDID = 122
	COMMANDID_PHP_ADMIN_MODIFYUSERSTATUS     COMMANDID = 123
	COMMANDID_PHP_ADMIN_MODIFYUSERSTATUS_ACK COMMANDID = 124
	COMMANDID_IMCHAT_PERSONAL                COMMANDID = 125
	COMMANDID_IMCHAT_PERSONAL_ACK            COMMANDID = 126
	COMMANDID_IMCHAT_PERSONAL_NOTIFY         COMMANDID = 127
	COMMANDID_REQUEST_IP                     COMMANDID = 400
	COMMANDID_REQUEST_IP_ACK                 COMMANDID = 401
	COMMANDID_REGIST_COMMUNICATIONSERVICE    COMMANDID = 402
	COMMANDID_GENERAL_MESSAGE                COMMANDID = 501
	COMMANDID_POP_GENERAL_MESSAGE            COMMANDID = 502
	COMMANDID_POP_GENERAL_MESSAGE_ACK        COMMANDID = 503
	COMMANDID_BULLETIN                       COMMANDID = 600
	COMMANDID_BULLETIN_NOTIFY                COMMANDID = 601
	COMMANDID_BULLETIN_PUBLISH               COMMANDID = 605
	COMMANDID_BULLETIN_PUBLISH_ACK           COMMANDID = 606
	COMMANDID_BIZCARD_GET_BYPHONE            COMMANDID = 701
	COMMANDID_BIZCARD_GET_BYPHONE_ACK        COMMANDID = 702
	COMMANDID_BIZCARD_INSERT                 COMMANDID = 703
	COMMANDID_BIZCARD_INSERT_ACK             COMMANDID = 704
	COMMANDID_BIZCARD_UPDATE                 COMMANDID = 705
	COMMANDID_BIZCARD_UPDATE_ACK             COMMANDID = 706
	COMMANDID_BIZCARD_DELETE                 COMMANDID = 707
	COMMANDID_BIZCARD_DELETE_ACK             COMMANDID = 708
	COMMANDID_BUSINESS_QUERY_AD              COMMANDID = 750
	COMMANDID_BUSINESS_QUERY_AD_ACK          COMMANDID = 751
	COMMANDID_BUSINESS_SAVE_AD               COMMANDID = 752
	COMMANDID_BUSINESS_SAVE_AD_ACK           COMMANDID = 753
	COMMANDID_BUSINESS_UPDATE_AD             COMMANDID = 754
	COMMANDID_BUSINESS_UPDATE_AD_ACK         COMMANDID = 755
	COMMANDID_BUSINESS_DELETE_AD             COMMANDID = 756
	COMMANDID_BUSINESS_DELETE_AD_ACK         COMMANDID = 757
	COMMANDID_USERSHOWRULE_RESULT            COMMANDID = 758
	COMMANDID_USERSHOWRULE_GET               COMMANDID = 759
	COMMANDID_USERSHOWRULE_SAVE              COMMANDID = 760
	COMMANDID_USERSHOWRULE_UPDATE            COMMANDID = 761
	COMMANDID_USERSHOWRULE_DELETE            COMMANDID = 762
	COMMANDID_BONDERY_MQ                     COMMANDID = 10000
	COMMANDID_SYSTEM_LOG                     COMMANDID = 10001
	COMMANDID_LOCATIONSHARE                  COMMANDID = 10700
	COMMANDID_LOCATIONSHARE_NOTIFY           COMMANDID = 10701
	COMMANDID_LOCATIONSHARE_INVIT            COMMANDID = 10702
	COMMANDID_LOCATIONSHARE_INVIT_ACK        COMMANDID = 10703
	COMMANDID_LOCATIONSHARE_INVIT_NOTIFY     COMMANDID = 10704
	COMMANDID_LOCATIONSHARE_JOIN             COMMANDID = 10705
	COMMANDID_LOCATIONSHARE_JOIN_ACK         COMMANDID = 10706
	COMMANDID_LOCATIONSHARE_JOIN_NOTIFY      COMMANDID = 10707
	COMMANDID_LOCATIONSHARE_QUIT             COMMANDID = 10709
	COMMANDID_LOCATIONSHARE_QUIT_ACK         COMMANDID = 10710
	COMMANDID_LOCATIONSHARE_QUIT_NOTIFY      COMMANDID = 10711
	COMMANDID_PUSH_APNS                      COMMANDID = 10801
	// and does not give you a ack.
	COMMANDID_PUSH_APNS_ACK          COMMANDID = 10802
	COMMANDID_PUSH_GENERAL           COMMANDID = 10805
	COMMANDID_PUSH_SMS               COMMANDID = 10806
	COMMANDID_ENDORSEMENT_TAKE       COMMANDID = 10901
	COMMANDID_ENDORSEMENT_TAKE_ACK   COMMANDID = 10902
	COMMANDID_ENDORSEMENT_QUERY      COMMANDID = 10911
	COMMANDID_ENDORSEMENT_QUERY_ACK  COMMANDID = 10912
	COMMANDID_ENDORSEMENT_DELET      COMMANDID = 10921
	COMMANDID_ENDORSEMENT_DELETE_ACK COMMANDID = 10922
	// 商家查询代言领取记录数据。
	COMMANDID_ENDORSEMENT_ADMIN_QUERY            COMMANDID = 10951
	COMMANDID_ENDORSEMENT_ADMIN_QUERY_ACK        COMMANDID = 10952
	COMMANDID_SHOWBIZ_QUERY                      COMMANDID = 11001
	COMMANDID_SHOWBIZ_QUERY_ACK                  COMMANDID = 11002
	COMMANDID_SHOWBIZ_INSERT                     COMMANDID = 11011
	COMMANDID_SHOWBIZ_INSERT_ACK                 COMMANDID = 11012
	COMMANDID_SHOWBIZ_DELETE                     COMMANDID = 11021
	COMMANDID_SHOWBIZ_DELETE_ACK                 COMMANDID = 11022
	COMMANDID_SHOWBIZ_UPDATE                     COMMANDID = 11031
	COMMANDID_SHOWBIZ_UPDATE_ACK                 COMMANDID = 11032
	COMMANDID_SHOWPERSONAL_QUERY                 COMMANDID = 11041
	COMMANDID_SHOWPERSONAL_QUERY_ACK             COMMANDID = 11042
	COMMANDID_SHOWPERSONAL_INSERT                COMMANDID = 11051
	COMMANDID_SHOWPERSONAL_INSERT_ACK            COMMANDID = 11052
	COMMANDID_SHOWPERSONAL_UPDATE                COMMANDID = 11061
	COMMANDID_SHOWPERSONAL_UPDATE_ACK            COMMANDID = 11062
	COMMANDID_SHOWPERSONAL_DELETE                COMMANDID = 11071
	COMMANDID_SHOWPERSONAL_DELETE_ACK            COMMANDID = 11072
	COMMANDID_SHOWDIAL                           COMMANDID = 11081
	COMMANDID_SHOWDIAL_ACK                       COMMANDID = 11082
	COMMANDID_SHOWDIAL_NOTIFY                    COMMANDID = 11083
	COMMANDID_SHOWDIAL_CACHE_UPDATE_SYSTEMNOTIFY COMMANDID = 11091
)

var COMMANDID_name = map[int32]string{
	1:     "HEART_BEAT",
	2:     "HEART_BEAT_ACK",
	20:    "ROUTE_REQ",
	21:    "ROUTE_ONLINECHECK",
	22:    "ROUTE_ONLINECHECK_ACK",
	101:   "USER_LOGIN",
	102:   "USER_LOGIN_ACK",
	103:   "USER_LOGOFF",
	104:   "USER_LOGOFF_ACK",
	105:   "MULTI_DEVICE_KICKED_NOTIFY",
	106:   "IM_TEXT",
	107:   "IM_PICTURE",
	108:   "IM_AUDIO",
	109:   "IM_VIDEO",
	110:   "IM_URL",
	111:   "IM_LOCATION",
	112:   "IM_LOCATION_SHARE_BEGIN",
	113:   "IM_LOCATION_SHARE_ANSWER",
	114:   "IM_LOCATION_SHARE_CONTINUE",
	115:   "IM_LOCATION_SHARE_END",
	117:   "PHONEDIAL",
	118:   "PHONEDIAL_ACK",
	119:   "GET_CONTACTS_INFO",
	120:   "GET_CONTACTS_INFO_ACK",
	121:   "PHP_USER_MODIFYSTATUS",
	122:   "PHP_USER_MODIFYSTATUS_ACK",
	123:   "PHP_ADMIN_MODIFYUSERSTATUS",
	124:   "PHP_ADMIN_MODIFYUSERSTATUS_ACK",
	125:   "IMCHAT_PERSONAL",
	126:   "IMCHAT_PERSONAL_ACK",
	127:   "IMCHAT_PERSONAL_NOTIFY",
	400:   "REQUEST_IP",
	401:   "REQUEST_IP_ACK",
	402:   "REGIST_COMMUNICATIONSERVICE",
	501:   "GENERAL_MESSAGE",
	502:   "POP_GENERAL_MESSAGE",
	503:   "POP_GENERAL_MESSAGE_ACK",
	600:   "BULLETIN",
	601:   "BULLETIN_NOTIFY",
	605:   "BULLETIN_PUBLISH",
	606:   "BULLETIN_PUBLISH_ACK",
	701:   "BIZCARD_GET_BYPHONE",
	702:   "BIZCARD_GET_BYPHONE_ACK",
	703:   "BIZCARD_INSERT",
	704:   "BIZCARD_INSERT_ACK",
	705:   "BIZCARD_UPDATE",
	706:   "BIZCARD_UPDATE_ACK",
	707:   "BIZCARD_DELETE",
	708:   "BIZCARD_DELETE_ACK",
	750:   "BUSINESS_QUERY_AD",
	751:   "BUSINESS_QUERY_AD_ACK",
	752:   "BUSINESS_SAVE_AD",
	753:   "BUSINESS_SAVE_AD_ACK",
	754:   "BUSINESS_UPDATE_AD",
	755:   "BUSINESS_UPDATE_AD_ACK",
	756:   "BUSINESS_DELETE_AD",
	757:   "BUSINESS_DELETE_AD_ACK",
	758:   "USERSHOWRULE_RESULT",
	759:   "USERSHOWRULE_GET",
	760:   "USERSHOWRULE_SAVE",
	761:   "USERSHOWRULE_UPDATE",
	762:   "USERSHOWRULE_DELETE",
	10000: "BONDERY_MQ",
	10001: "SYSTEM_LOG",
	10700: "LOCATIONSHARE",
	10701: "LOCATIONSHARE_NOTIFY",
	10702: "LOCATIONSHARE_INVIT",
	10703: "LOCATIONSHARE_INVIT_ACK",
	10704: "LOCATIONSHARE_INVIT_NOTIFY",
	10705: "LOCATIONSHARE_JOIN",
	10706: "LOCATIONSHARE_JOIN_ACK",
	10707: "LOCATIONSHARE_JOIN_NOTIFY",
	10709: "LOCATIONSHARE_QUIT",
	10710: "LOCATIONSHARE_QUIT_ACK",
	10711: "LOCATIONSHARE_QUIT_NOTIFY",
	10801: "PUSH_APNS",
	10802: "PUSH_APNS_ACK",
	10805: "PUSH_GENERAL",
	10806: "PUSH_SMS",
	10901: "ENDORSEMENT_TAKE",
	10902: "ENDORSEMENT_TAKE_ACK",
	10911: "ENDORSEMENT_QUERY",
	10912: "ENDORSEMENT_QUERY_ACK",
	10921: "ENDORSEMENT_DELET",
	10922: "ENDORSEMENT_DELETE_ACK",
	10951: "ENDORSEMENT_ADMIN_QUERY",
	10952: "ENDORSEMENT_ADMIN_QUERY_ACK",
	11001: "SHOWBIZ_QUERY",
	11002: "SHOWBIZ_QUERY_ACK",
	11011: "SHOWBIZ_INSERT",
	11012: "SHOWBIZ_INSERT_ACK",
	11021: "SHOWBIZ_DELETE",
	11022: "SHOWBIZ_DELETE_ACK",
	11031: "SHOWBIZ_UPDATE",
	11032: "SHOWBIZ_UPDATE_ACK",
	11041: "SHOWPERSONAL_QUERY",
	11042: "SHOWPERSONAL_QUERY_ACK",
	11051: "SHOWPERSONAL_INSERT",
	11052: "SHOWPERSONAL_INSERT_ACK",
	11061: "SHOWPERSONAL_UPDATE",
	11062: "SHOWPERSONAL_UPDATE_ACK",
	11071: "SHOWPERSONAL_DELETE",
	11072: "SHOWPERSONAL_DELETE_ACK",
	11081: "SHOWDIAL",
	11082: "SHOWDIAL_ACK",
	11083: "SHOWDIAL_NOTIFY",
	11091: "SHOWDIAL_CACHE_UPDATE_SYSTEMNOTIFY",
}
var COMMANDID_value = map[string]int32{
	"HEART_BEAT":                         1,
	"HEART_BEAT_ACK":                     2,
	"ROUTE_REQ":                          20,
	"ROUTE_ONLINECHECK":                  21,
	"ROUTE_ONLINECHECK_ACK":              22,
	"USER_LOGIN":                         101,
	"USER_LOGIN_ACK":                     102,
	"USER_LOGOFF":                        103,
	"USER_LOGOFF_ACK":                    104,
	"MULTI_DEVICE_KICKED_NOTIFY":         105,
	"IM_TEXT":                            106,
	"IM_PICTURE":                         107,
	"IM_AUDIO":                           108,
	"IM_VIDEO":                           109,
	"IM_URL":                             110,
	"IM_LOCATION":                        111,
	"IM_LOCATION_SHARE_BEGIN":            112,
	"IM_LOCATION_SHARE_ANSWER":           113,
	"IM_LOCATION_SHARE_CONTINUE":         114,
	"IM_LOCATION_SHARE_END":              115,
	"PHONEDIAL":                          117,
	"PHONEDIAL_ACK":                      118,
	"GET_CONTACTS_INFO":                  119,
	"GET_CONTACTS_INFO_ACK":              120,
	"PHP_USER_MODIFYSTATUS":              121,
	"PHP_USER_MODIFYSTATUS_ACK":          122,
	"PHP_ADMIN_MODIFYUSERSTATUS":         123,
	"PHP_ADMIN_MODIFYUSERSTATUS_ACK":     124,
	"IMCHAT_PERSONAL":                    125,
	"IMCHAT_PERSONAL_ACK":                126,
	"IMCHAT_PERSONAL_NOTIFY":             127,
	"REQUEST_IP":                         400,
	"REQUEST_IP_ACK":                     401,
	"REGIST_COMMUNICATIONSERVICE":        402,
	"GENERAL_MESSAGE":                    501,
	"POP_GENERAL_MESSAGE":                502,
	"POP_GENERAL_MESSAGE_ACK":            503,
	"BULLETIN":                           600,
	"BULLETIN_NOTIFY":                    601,
	"BULLETIN_PUBLISH":                   605,
	"BULLETIN_PUBLISH_ACK":               606,
	"BIZCARD_GET_BYPHONE":                701,
	"BIZCARD_GET_BYPHONE_ACK":            702,
	"BIZCARD_INSERT":                     703,
	"BIZCARD_INSERT_ACK":                 704,
	"BIZCARD_UPDATE":                     705,
	"BIZCARD_UPDATE_ACK":                 706,
	"BIZCARD_DELETE":                     707,
	"BIZCARD_DELETE_ACK":                 708,
	"BUSINESS_QUERY_AD":                  750,
	"BUSINESS_QUERY_AD_ACK":              751,
	"BUSINESS_SAVE_AD":                   752,
	"BUSINESS_SAVE_AD_ACK":               753,
	"BUSINESS_UPDATE_AD":                 754,
	"BUSINESS_UPDATE_AD_ACK":             755,
	"BUSINESS_DELETE_AD":                 756,
	"BUSINESS_DELETE_AD_ACK":             757,
	"USERSHOWRULE_RESULT":                758,
	"USERSHOWRULE_GET":                   759,
	"USERSHOWRULE_SAVE":                  760,
	"USERSHOWRULE_UPDATE":                761,
	"USERSHOWRULE_DELETE":                762,
	"BONDERY_MQ":                         10000,
	"SYSTEM_LOG":                         10001,
	"LOCATIONSHARE":                      10700,
	"LOCATIONSHARE_NOTIFY":               10701,
	"LOCATIONSHARE_INVIT":                10702,
	"LOCATIONSHARE_INVIT_ACK":            10703,
	"LOCATIONSHARE_INVIT_NOTIFY":         10704,
	"LOCATIONSHARE_JOIN":                 10705,
	"LOCATIONSHARE_JOIN_ACK":             10706,
	"LOCATIONSHARE_JOIN_NOTIFY":          10707,
	"LOCATIONSHARE_QUIT":                 10709,
	"LOCATIONSHARE_QUIT_ACK":             10710,
	"LOCATIONSHARE_QUIT_NOTIFY":          10711,
	"PUSH_APNS":                          10801,
	"PUSH_APNS_ACK":                      10802,
	"PUSH_GENERAL":                       10805,
	"PUSH_SMS":                           10806,
	"ENDORSEMENT_TAKE":                   10901,
	"ENDORSEMENT_TAKE_ACK":               10902,
	"ENDORSEMENT_QUERY":                  10911,
	"ENDORSEMENT_QUERY_ACK":              10912,
	"ENDORSEMENT_DELET":                  10921,
	"ENDORSEMENT_DELETE_ACK":             10922,
	"ENDORSEMENT_ADMIN_QUERY":            10951,
	"ENDORSEMENT_ADMIN_QUERY_ACK":        10952,
	"SHOWBIZ_QUERY":                      11001,
	"SHOWBIZ_QUERY_ACK":                  11002,
	"SHOWBIZ_INSERT":                     11011,
	"SHOWBIZ_INSERT_ACK":                 11012,
	"SHOWBIZ_DELETE":                     11021,
	"SHOWBIZ_DELETE_ACK":                 11022,
	"SHOWBIZ_UPDATE":                     11031,
	"SHOWBIZ_UPDATE_ACK":                 11032,
	"SHOWPERSONAL_QUERY":                 11041,
	"SHOWPERSONAL_QUERY_ACK":             11042,
	"SHOWPERSONAL_INSERT":                11051,
	"SHOWPERSONAL_INSERT_ACK":            11052,
	"SHOWPERSONAL_UPDATE":                11061,
	"SHOWPERSONAL_UPDATE_ACK":            11062,
	"SHOWPERSONAL_DELETE":                11071,
	"SHOWPERSONAL_DELETE_ACK":            11072,
	"SHOWDIAL":                           11081,
	"SHOWDIAL_ACK":                       11082,
	"SHOWDIAL_NOTIFY":                    11083,
	"SHOWDIAL_CACHE_UPDATE_SYSTEMNOTIFY": 11091,
}

func (x COMMANDID) Enum() *COMMANDID {
	p := new(COMMANDID)
	*p = x
	return p
}
func (x COMMANDID) String() string {
	return proto.EnumName(COMMANDID_name, int32(x))
}
func (x *COMMANDID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(COMMANDID_value, data, "COMMANDID")
	if err != nil {
		return err
	}
	*x = COMMANDID(value)
	return nil
}
func (COMMANDID) EnumDescriptor() ([]byte, []int) { return fileDescriptor29, []int{0} }

type USER_TYPE int32

const (
	USER_TYPE_USER_TYPE_UNKNOWN        USER_TYPE = 0
	USER_TYPE_USER_TYPE_PERSONAL       USER_TYPE = 1
	USER_TYPE_USER_TYPE_PUBLIC_ACCOUNT USER_TYPE = 2
)

var USER_TYPE_name = map[int32]string{
	0: "USER_TYPE_UNKNOWN",
	1: "USER_TYPE_PERSONAL",
	2: "USER_TYPE_PUBLIC_ACCOUNT",
}
var USER_TYPE_value = map[string]int32{
	"USER_TYPE_UNKNOWN":        0,
	"USER_TYPE_PERSONAL":       1,
	"USER_TYPE_PUBLIC_ACCOUNT": 2,
}

func (x USER_TYPE) Enum() *USER_TYPE {
	p := new(USER_TYPE)
	*p = x
	return p
}
func (x USER_TYPE) String() string {
	return proto.EnumName(USER_TYPE_name, int32(x))
}
func (x *USER_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(USER_TYPE_value, data, "USER_TYPE")
	if err != nil {
		return err
	}
	*x = USER_TYPE(value)
	return nil
}
func (USER_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor29, []int{1} }

type ERRNO_CODE int32

const (
	ERRNO_CODE_ERRNO_CODE_OK                                     ERRNO_CODE = 0
	ERRNO_CODE_ERRNO_CODE_DEFAULT                                ERRNO_CODE = 2
	ERRNO_CODE_ERRNO_CODE_LOGIN_IN_OTHER_DEVICE                  ERRNO_CODE = 100
	ERRNO_CODE_ERRNO_CODE_NO_PROTOCOL                            ERRNO_CODE = 101
	ERRNO_CODE_ERRNO_CODE_TAG_NO_PROTOCOL                        ERRNO_CODE = 102
	ERRNO_CODE_ERRNO_CODE_PUSH_QUEUE                             ERRNO_CODE = 103
	ERRNO_CODE_ERRNO_CODE_LOGON_NO_PHONE_S                       ERRNO_CODE = 104
	ERRNO_CODE_ERRNO_CODE_HEART_ERR_SESSION_S                    ERRNO_CODE = 105
	ERRNO_CODE_ERRNO_CODE_NOT_LOGON                              ERRNO_CODE = 106
	ERRNO_CODE_ERRNO_CODE_WITHOUT_TAG                            ERRNO_CODE = 107
	ERRNO_CODE_ERRNO_CODE_WITHOUT_UID                            ERRNO_CODE = 108
	ERRNO_CODE_ERRNO_CODE_WITHOUT_TERMID                         ERRNO_CODE = 109
	ERRNO_CODE_ERRNO_CODE_ERR_SESSIONID                          ERRNO_CODE = 110
	ERRNO_CODE_ERRNO_CODE_TERM_UNALIVE                           ERRNO_CODE = 111
	ERRNO_CODE_ERRNO_CODE_ERR_UID                                ERRNO_CODE = 112
	ERRNO_CODE_ERRNO_CODE_ERR_PID                                ERRNO_CODE = 113
	ERRNO_CODE_ERRNO_CODE_ERR_RESEND                             ERRNO_CODE = 114
	ERRNO_CODE_ERRNO_CODE_ERR_TID                                ERRNO_CODE = 115
	ERRNO_CODE_ERRNO_CODE_SQL                                    ERRNO_CODE = 200
	ERRNO_CODE_ERRNO_CODE_DATA_SRAL                              ERRNO_CODE = 201
	ERRNO_CODE_ERRNO_CODE_NOT_FIND_TARGET_USERID                 ERRNO_CODE = 203
	ERRNO_CODE_ERRNO_CODE_DATA_WAREHOUSING_FAILURE_MYSQL         ERRNO_CODE = 204
	ERRNO_CODE_ERRNO_CODE_DATA_WAREHOUSING_FAILURE_REDIS         ERRNO_CODE = 205
	ERRNO_CODE_ERRNO_CODE_DB_SERVER_EXCEPTION                    ERRNO_CODE = 206
	ERRNO_CODE_ERRNO_CODE_USER_SESSION_ERROR                     ERRNO_CODE = 207
	ERRNO_CODE_ERRNO_CODE_USER_NOT_LOGIN                         ERRNO_CODE = 208
	ERRNO_CODE_ERRNO_CODE_USER_ID_ERROR                          ERRNO_CODE = 209
	ERRNO_CODE_ERRNO_CODE_USER_SEND_TOROUTE_ERROR                ERRNO_CODE = 210
	ERRNO_CODE_ERRNO_CODE_NOT_DST_PHONE                          ERRNO_CODE = 211
	ERRNO_CODE_ERRNO_CODE_DATABASE_QUERY_FAILDED                 ERRNO_CODE = 212
	ERRNO_CODE_ERRNO_CODE_DATA_EXCEPTION                         ERRNO_CODE = 213
	ERRNO_CODE_ERRNO_CODE_NOT_SESSIONID                          ERRNO_CODE = 214
	ERRNO_CODE_ERRNO_CODE_NOT_PHONE                              ERRNO_CODE = 215
	ERRNO_CODE_ERRNO_CODE_PHONE_ERROR                            ERRNO_CODE = 216
	ERRNO_CODE_ERRNO_CODE_DATABASE_NOT_DATA                      ERRNO_CODE = 217
	ERRNO_CODE_ERRNO_CODE_SHOW_EXPIRED                           ERRNO_CODE = 218
	ERRNO_CODE_ERRNO_CODE_NOT_TOKEN_ID                           ERRNO_CODE = 219
	ERRNO_CODE_ERRNO_CODE_NOT_SHOW                               ERRNO_CODE = 220
	ERRNO_CODE_ERRNO_CODE_NOT_HUXIN_USER                         ERRNO_CODE = 403
	ERRNO_CODE_ERRNO_CODE_BLOCKED_BY_DST_USER                    ERRNO_CODE = 501
	ERRNO_CODE_ERRNO_CODE_INVALID_USER_INFO                      ERRNO_CODE = 1101
	ERRNO_CODE_ERRNO_CODE_INVALID_SESSION                        ERRNO_CODE = 1102
	ERRNO_CODE_ERRNO_CODE_INVALID_PASSWD                         ERRNO_CODE = 1103
	ERRNO_CODE_ERRNO_CODE_INVALID_IM_CHAT_TARGET_USER            ERRNO_CODE = 1201
	ERRNO_CODE_ERRNO_CODE_INVALID_IM_CHAT_EMPTY_BODY_NOT_ALLOWED ERRNO_CODE = 1202
	ERRNO_CODE_ERRNO_CODE_LOCATIONSHARE_TASK_NOT_EXIST           ERRNO_CODE = 1301
	ERRNO_CODE_ERRNO_CODE_LOCATIONSHARE_NOT_INSIDE_TASK          ERRNO_CODE = 1302
)

var ERRNO_CODE_name = map[int32]string{
	0:    "ERRNO_CODE_OK",
	2:    "ERRNO_CODE_DEFAULT",
	100:  "ERRNO_CODE_LOGIN_IN_OTHER_DEVICE",
	101:  "ERRNO_CODE_NO_PROTOCOL",
	102:  "ERRNO_CODE_TAG_NO_PROTOCOL",
	103:  "ERRNO_CODE_PUSH_QUEUE",
	104:  "ERRNO_CODE_LOGON_NO_PHONE_S",
	105:  "ERRNO_CODE_HEART_ERR_SESSION_S",
	106:  "ERRNO_CODE_NOT_LOGON",
	107:  "ERRNO_CODE_WITHOUT_TAG",
	108:  "ERRNO_CODE_WITHOUT_UID",
	109:  "ERRNO_CODE_WITHOUT_TERMID",
	110:  "ERRNO_CODE_ERR_SESSIONID",
	111:  "ERRNO_CODE_TERM_UNALIVE",
	112:  "ERRNO_CODE_ERR_UID",
	113:  "ERRNO_CODE_ERR_PID",
	114:  "ERRNO_CODE_ERR_RESEND",
	115:  "ERRNO_CODE_ERR_TID",
	200:  "ERRNO_CODE_SQL",
	201:  "ERRNO_CODE_DATA_SRAL",
	203:  "ERRNO_CODE_NOT_FIND_TARGET_USERID",
	204:  "ERRNO_CODE_DATA_WAREHOUSING_FAILURE_MYSQL",
	205:  "ERRNO_CODE_DATA_WAREHOUSING_FAILURE_REDIS",
	206:  "ERRNO_CODE_DB_SERVER_EXCEPTION",
	207:  "ERRNO_CODE_USER_SESSION_ERROR",
	208:  "ERRNO_CODE_USER_NOT_LOGIN",
	209:  "ERRNO_CODE_USER_ID_ERROR",
	210:  "ERRNO_CODE_USER_SEND_TOROUTE_ERROR",
	211:  "ERRNO_CODE_NOT_DST_PHONE",
	212:  "ERRNO_CODE_DATABASE_QUERY_FAILDED",
	213:  "ERRNO_CODE_DATA_EXCEPTION",
	214:  "ERRNO_CODE_NOT_SESSIONID",
	215:  "ERRNO_CODE_NOT_PHONE",
	216:  "ERRNO_CODE_PHONE_ERROR",
	217:  "ERRNO_CODE_DATABASE_NOT_DATA",
	218:  "ERRNO_CODE_SHOW_EXPIRED",
	219:  "ERRNO_CODE_NOT_TOKEN_ID",
	220:  "ERRNO_CODE_NOT_SHOW",
	403:  "ERRNO_CODE_NOT_HUXIN_USER",
	501:  "ERRNO_CODE_BLOCKED_BY_DST_USER",
	1101: "ERRNO_CODE_INVALID_USER_INFO",
	1102: "ERRNO_CODE_INVALID_SESSION",
	1103: "ERRNO_CODE_INVALID_PASSWD",
	1201: "ERRNO_CODE_INVALID_IM_CHAT_TARGET_USER",
	1202: "ERRNO_CODE_INVALID_IM_CHAT_EMPTY_BODY_NOT_ALLOWED",
	1301: "ERRNO_CODE_LOCATIONSHARE_TASK_NOT_EXIST",
	1302: "ERRNO_CODE_LOCATIONSHARE_NOT_INSIDE_TASK",
}
var ERRNO_CODE_value = map[string]int32{
	"ERRNO_CODE_OK":                                     0,
	"ERRNO_CODE_DEFAULT":                                2,
	"ERRNO_CODE_LOGIN_IN_OTHER_DEVICE":                  100,
	"ERRNO_CODE_NO_PROTOCOL":                            101,
	"ERRNO_CODE_TAG_NO_PROTOCOL":                        102,
	"ERRNO_CODE_PUSH_QUEUE":                             103,
	"ERRNO_CODE_LOGON_NO_PHONE_S":                       104,
	"ERRNO_CODE_HEART_ERR_SESSION_S":                    105,
	"ERRNO_CODE_NOT_LOGON":                              106,
	"ERRNO_CODE_WITHOUT_TAG":                            107,
	"ERRNO_CODE_WITHOUT_UID":                            108,
	"ERRNO_CODE_WITHOUT_TERMID":                         109,
	"ERRNO_CODE_ERR_SESSIONID":                          110,
	"ERRNO_CODE_TERM_UNALIVE":                           111,
	"ERRNO_CODE_ERR_UID":                                112,
	"ERRNO_CODE_ERR_PID":                                113,
	"ERRNO_CODE_ERR_RESEND":                             114,
	"ERRNO_CODE_ERR_TID":                                115,
	"ERRNO_CODE_SQL":                                    200,
	"ERRNO_CODE_DATA_SRAL":                              201,
	"ERRNO_CODE_NOT_FIND_TARGET_USERID":                 203,
	"ERRNO_CODE_DATA_WAREHOUSING_FAILURE_MYSQL":         204,
	"ERRNO_CODE_DATA_WAREHOUSING_FAILURE_REDIS":         205,
	"ERRNO_CODE_DB_SERVER_EXCEPTION":                    206,
	"ERRNO_CODE_USER_SESSION_ERROR":                     207,
	"ERRNO_CODE_USER_NOT_LOGIN":                         208,
	"ERRNO_CODE_USER_ID_ERROR":                          209,
	"ERRNO_CODE_USER_SEND_TOROUTE_ERROR":                210,
	"ERRNO_CODE_NOT_DST_PHONE":                          211,
	"ERRNO_CODE_DATABASE_QUERY_FAILDED":                 212,
	"ERRNO_CODE_DATA_EXCEPTION":                         213,
	"ERRNO_CODE_NOT_SESSIONID":                          214,
	"ERRNO_CODE_NOT_PHONE":                              215,
	"ERRNO_CODE_PHONE_ERROR":                            216,
	"ERRNO_CODE_DATABASE_NOT_DATA":                      217,
	"ERRNO_CODE_SHOW_EXPIRED":                           218,
	"ERRNO_CODE_NOT_TOKEN_ID":                           219,
	"ERRNO_CODE_NOT_SHOW":                               220,
	"ERRNO_CODE_NOT_HUXIN_USER":                         403,
	"ERRNO_CODE_BLOCKED_BY_DST_USER":                    501,
	"ERRNO_CODE_INVALID_USER_INFO":                      1101,
	"ERRNO_CODE_INVALID_SESSION":                        1102,
	"ERRNO_CODE_INVALID_PASSWD":                         1103,
	"ERRNO_CODE_INVALID_IM_CHAT_TARGET_USER":            1201,
	"ERRNO_CODE_INVALID_IM_CHAT_EMPTY_BODY_NOT_ALLOWED": 1202,
	"ERRNO_CODE_LOCATIONSHARE_TASK_NOT_EXIST":           1301,
	"ERRNO_CODE_LOCATIONSHARE_NOT_INSIDE_TASK":          1302,
}

func (x ERRNO_CODE) Enum() *ERRNO_CODE {
	p := new(ERRNO_CODE)
	*p = x
	return p
}
func (x ERRNO_CODE) String() string {
	return proto.EnumName(ERRNO_CODE_name, int32(x))
}
func (x *ERRNO_CODE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ERRNO_CODE_value, data, "ERRNO_CODE")
	if err != nil {
		return err
	}
	*x = ERRNO_CODE(value)
	return nil
}
func (ERRNO_CODE) EnumDescriptor() ([]byte, []int) { return fileDescriptor29, []int{2} }

type Device_Type int32

const (
	Device_Type_DeviceType_IPhone     Device_Type = 1
	Device_Type_DeviceType_Android    Device_Type = 2
	Device_Type_DeviceType_IPad       Device_Type = 3
	Device_Type_DeviceType_AndroidPad Device_Type = 4
	Device_Type_DeviceType_UNKNOWN    Device_Type = 5
)

var Device_Type_name = map[int32]string{
	1: "DeviceType_IPhone",
	2: "DeviceType_Android",
	3: "DeviceType_IPad",
	4: "DeviceType_AndroidPad",
	5: "DeviceType_UNKNOWN",
}
var Device_Type_value = map[string]int32{
	"DeviceType_IPhone":     1,
	"DeviceType_Android":    2,
	"DeviceType_IPad":       3,
	"DeviceType_AndroidPad": 4,
	"DeviceType_UNKNOWN":    5,
}

func (x Device_Type) Enum() *Device_Type {
	p := new(Device_Type)
	*p = x
	return p
}
func (x Device_Type) String() string {
	return proto.EnumName(Device_Type_name, int32(x))
}
func (x *Device_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Device_Type_value, data, "Device_Type")
	if err != nil {
		return err
	}
	*x = Device_Type(value)
	return nil
}
func (Device_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor29, []int{3} }

type USER_SHOW_STATUS int32

const (
	USER_SHOW_STATUS_USER_SHOW_STATUS_NORMAL  USER_SHOW_STATUS = 0
	USER_SHOW_STATUS_USER_SHOW_STATUS_DISABLE USER_SHOW_STATUS = 1
	USER_SHOW_STATUS_USER_SHOW_STATUS_FROZEN  USER_SHOW_STATUS = 2
)

var USER_SHOW_STATUS_name = map[int32]string{
	0: "USER_SHOW_STATUS_NORMAL",
	1: "USER_SHOW_STATUS_DISABLE",
	2: "USER_SHOW_STATUS_FROZEN",
}
var USER_SHOW_STATUS_value = map[string]int32{
	"USER_SHOW_STATUS_NORMAL":  0,
	"USER_SHOW_STATUS_DISABLE": 1,
	"USER_SHOW_STATUS_FROZEN":  2,
}

func (x USER_SHOW_STATUS) Enum() *USER_SHOW_STATUS {
	p := new(USER_SHOW_STATUS)
	*p = x
	return p
}
func (x USER_SHOW_STATUS) String() string {
	return proto.EnumName(USER_SHOW_STATUS_name, int32(x))
}
func (x *USER_SHOW_STATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(USER_SHOW_STATUS_value, data, "USER_SHOW_STATUS")
	if err != nil {
		return err
	}
	*x = USER_SHOW_STATUS(value)
	return nil
}
func (USER_SHOW_STATUS) EnumDescriptor() ([]byte, []int) { return fileDescriptor29, []int{4} }

type Heart_Beat struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Heart_Beat) Reset()                    { *m = Heart_Beat{} }
func (m *Heart_Beat) String() string            { return proto.CompactTextString(m) }
func (*Heart_Beat) ProtoMessage()               {}
func (*Heart_Beat) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{0} }

type Heart_Beat_Ack struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Heart_Beat_Ack) Reset()                    { *m = Heart_Beat_Ack{} }
func (m *Heart_Beat_Ack) String() string            { return proto.CompactTextString(m) }
func (*Heart_Beat_Ack) ProtoMessage()               {}
func (*Heart_Beat_Ack) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{1} }

func init() {
	proto.RegisterType((*Heart_Beat)(nil), "com.proto.basic.Heart_Beat")
	proto.RegisterType((*Heart_Beat_Ack)(nil), "com.proto.basic.Heart_Beat_Ack")
	proto.RegisterEnum("com.proto.basic.COMMANDID", COMMANDID_name, COMMANDID_value)
	proto.RegisterEnum("com.proto.basic.USER_TYPE", USER_TYPE_name, USER_TYPE_value)
	proto.RegisterEnum("com.proto.basic.ERRNO_CODE", ERRNO_CODE_name, ERRNO_CODE_value)
	proto.RegisterEnum("com.proto.basic.Device_Type", Device_Type_name, Device_Type_value)
	proto.RegisterEnum("com.proto.basic.USER_SHOW_STATUS", USER_SHOW_STATUS_name, USER_SHOW_STATUS_value)
}

func init() { proto.RegisterFile("IM.Basic.proto", fileDescriptor29) }

var fileDescriptor29 = []byte{
	// 1892 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x57, 0x4b, 0x73, 0x5c, 0xc5,
	0x15, 0x66, 0x2c, 0x4d, 0x22, 0xb5, 0x6d, 0xe9, 0xb8, 0xf5, 0xf0, 0xdb, 0x80, 0x92, 0x82, 0x44,
	0x49, 0x5c, 0x95, 0x4d, 0xf6, 0x3d, 0xb7, 0x5b, 0x33, 0x1d, 0xdd, 0xdb, 0x7d, 0xd5, 0xdd, 0x77,
	0xa4, 0xf1, 0xa6, 0x4b, 0xb1, 0x05, 0x96, 0x8d, 0x2d, 0x23, 0x0c, 0x09, 0x79, 0x2e, 0xc2, 0x36,
	0x29, 0x08, 0x05, 0xc9, 0x2e, 0x8f, 0x5d, 0x12, 0x36, 0x50, 0x05, 0xbb, 0x04, 0xf2, 0xa8, 0x0a,
	0x04, 0x6c, 0xf3, 0x08, 0xaf, 0xbc, 0x7e, 0x42, 0xde, 0x86, 0xc0, 0x2a, 0x75, 0xfa, 0xde, 0x19,
	0xdd, 0xc7, 0x38, 0xc5, 0x6e, 0xfa, 0xfb, 0xce, 0x39, 0x7d, 0xee, 0xd7, 0xa7, 0x4f, 0x9f, 0x21,
	0x74, 0xb0, 0xf3, 0x60, 0xb2, 0xb9, 0x7d, 0xba, 0xb3, 0xf9, 0xc0, 0xf6, 0xd9, 0xd3, 0x57, 0x76,
	0x77, 0xae, 0xee, 0xd0, 0xd9, 0xb3, 0x3b, 0x97, 0xf2, 0x9f, 0xa7, 0xbf, 0x84, 0xf0, 0xd2, 0x01,
	0x42, 0x7a, 0x5b, 0x9b, 0xbb, 0x57, 0x7d, 0x67, 0x6b, 0xf3, 0xea, 0x12, 0x90, 0x99, 0xbd, 0x95,
	0x67, 0x67, 0x2f, 0x2e, 0x3f, 0x35, 0x4f, 0xa6, 0x23, 0x9d, 0x24, 0x4c, 0x71, 0xc9, 0xe9, 0x0c,
	0x21, 0x3d, 0xc1, 0x8c, 0xf3, 0x1d, 0xc1, 0x1c, 0xb4, 0x28, 0x25, 0x33, 0x7b, 0x6b, 0xcf, 0xa2,
	0x55, 0xd8, 0x47, 0x0f, 0x92, 0x69, 0xa3, 0x33, 0x27, 0xbc, 0x11, 0x6b, 0x30, 0x4f, 0x17, 0xc8,
	0xa1, 0x7c, 0xa9, 0x55, 0x2c, 0x95, 0x88, 0x7a, 0x22, 0x5a, 0x85, 0x05, 0x7a, 0x94, 0x2c, 0x34,
	0xe0, 0x10, 0x60, 0x11, 0x37, 0xc9, 0xac, 0x30, 0x3e, 0xd6, 0x5d, 0xa9, 0x60, 0x0b, 0x37, 0xd9,
	0x5b, 0x07, 0x9b, 0x7b, 0xe8, 0x2c, 0xd9, 0x3f, 0xc4, 0xf4, 0xca, 0x0a, 0xdc, 0x4b, 0xe7, 0xc8,
	0x6c, 0x09, 0x08, 0x56, 0xe7, 0xe9, 0x29, 0x72, 0x2c, 0xc9, 0x62, 0x27, 0x3d, 0x17, 0x7d, 0x19,
	0x09, 0xbf, 0x2a, 0xa3, 0x55, 0xc1, 0xbd, 0xd2, 0x4e, 0xae, 0x0c, 0x60, 0x9b, 0xee, 0x27, 0x1f,
	0x97, 0x89, 0x77, 0x62, 0xc3, 0xc1, 0x05, 0xdc, 0x56, 0x26, 0x3e, 0x95, 0x91, 0xcb, 0x8c, 0x80,
	0x8b, 0xf4, 0x00, 0x99, 0x92, 0x89, 0x67, 0x19, 0x97, 0x1a, 0xee, 0x2b, 0x56, 0x7d, 0xc9, 0x85,
	0x86, 0x4b, 0x94, 0x90, 0x8f, 0xc9, 0xc4, 0x67, 0x26, 0x86, 0xcb, 0x98, 0x8a, 0x4c, 0x7c, 0xac,
	0x23, 0xe6, 0xa4, 0x56, 0xb0, 0x43, 0x8f, 0x93, 0xc3, 0x25, 0xc0, 0xdb, 0x1e, 0x33, 0xc2, 0x77,
	0x04, 0x7e, 0xcc, 0x15, 0x7a, 0x82, 0x1c, 0x69, 0x92, 0x4c, 0xd9, 0x75, 0x61, 0xe0, 0x7e, 0x4c,
	0xb8, 0xc9, 0x46, 0x5a, 0x39, 0xa9, 0x32, 0x01, 0xbb, 0xa8, 0x5a, 0x93, 0x17, 0x8a, 0xc3, 0x03,
	0x28, 0x7b, 0xda, 0xd3, 0x4a, 0x70, 0xc9, 0x62, 0x78, 0x90, 0x1e, 0x22, 0x07, 0x47, 0xcb, 0xa0,
	0xc6, 0x43, 0x78, 0x12, 0x5d, 0xe1, 0x42, 0x38, 0x16, 0x39, 0xeb, 0xa5, 0x5a, 0xd1, 0xf0, 0x65,
	0x8c, 0xd9, 0x80, 0x83, 0xc7, 0x57, 0x90, 0x4a, 0x7b, 0xa9, 0x0f, 0xc2, 0x26, 0x9a, 0xcb, 0x95,
	0x81, 0x75, 0xcc, 0x65, 0x16, 0x1e, 0xa6, 0x27, 0xc9, 0xd1, 0xb1, 0x54, 0xf0, 0xfc, 0x2a, 0x7e,
	0x08, 0xd2, 0x8c, 0x27, 0x52, 0x15, 0x3c, 0x9a, 0x16, 0xee, 0x5f, 0xa3, 0x4b, 0xe4, 0xd4, 0xad,
	0xf9, 0x10, 0xe3, 0xeb, 0x78, 0xa4, 0x32, 0x89, 0x7a, 0xcc, 0xf9, 0x54, 0x18, 0xab, 0x15, 0x8b,
	0xe1, 0x1b, 0xf4, 0x30, 0x99, 0xab, 0x81, 0xc1, 0xfa, 0x9b, 0xf4, 0x18, 0x59, 0xac, 0x13, 0xc5,
	0x39, 0x7f, 0x8b, 0xce, 0x12, 0x62, 0xc4, 0x5a, 0x26, 0xac, 0xf3, 0x32, 0x85, 0x47, 0x27, 0xe8,
	0x1c, 0x99, 0xd9, 0x03, 0x42, 0x80, 0xc7, 0x26, 0xe8, 0x1d, 0xe4, 0xb8, 0x11, 0x5d, 0x69, 0x51,
	0x8b, 0x24, 0xc9, 0x94, 0xcc, 0x55, 0xb6, 0xc2, 0x60, 0xf1, 0xc0, 0xf7, 0x26, 0xe8, 0x3c, 0x99,
	0xed, 0x0a, 0x25, 0x0c, 0x8b, 0x7d, 0x22, 0xac, 0x65, 0x5d, 0x01, 0x37, 0x27, 0xe8, 0x11, 0x32,
	0x97, 0xea, 0xd4, 0xd7, 0x99, 0xf7, 0x26, 0xe8, 0x09, 0x72, 0x78, 0x0c, 0x13, 0xf6, 0x7b, 0x7f,
	0x82, 0x1e, 0x24, 0x53, 0x9d, 0x2c, 0x8e, 0x85, 0x93, 0x0a, 0xde, 0x99, 0xc4, 0xe0, 0xc3, 0xe5,
	0x30, 0xf3, 0x77, 0x27, 0xe9, 0x02, 0x81, 0x11, 0x9a, 0x66, 0x9d, 0x58, 0xda, 0x1e, 0xfc, 0x65,
	0x92, 0x1e, 0x25, 0xf3, 0x75, 0x38, 0x84, 0xfd, 0xeb, 0x24, 0xa6, 0xd3, 0x91, 0x67, 0x22, 0x66,
	0xb8, 0xc7, 0x73, 0xed, 0x0c, 0x42, 0x1d, 0xc0, 0x2f, 0xda, 0x98, 0xce, 0x18, 0x26, 0xf8, 0xfd,
	0xb2, 0x8d, 0x9a, 0x0c, 0x59, 0x89, 0x1f, 0xed, 0xe0, 0xf9, 0x36, 0x3d, 0x4c, 0x68, 0x15, 0x0c,
	0xd6, 0x2f, 0x54, 0xac, 0xb3, 0x94, 0x33, 0x27, 0xe0, 0x57, 0x15, 0xeb, 0x1c, 0x0c, 0xd6, 0xbf,
	0xae, 0x58, 0x73, 0x11, 0x0b, 0x27, 0xe0, 0x37, 0x15, 0xeb, 0x1c, 0x0c, 0xd6, 0xbf, 0x6d, 0xd3,
	0x45, 0x72, 0xa8, 0x93, 0x59, 0xa9, 0x84, 0xb5, 0x7e, 0x2d, 0x13, 0x66, 0xe0, 0x19, 0x87, 0xbf,
	0xb5, 0xe9, 0x31, 0xb2, 0xd0, 0xc0, 0x83, 0xcf, 0xdf, 0xdb, 0xb9, 0x4e, 0x05, 0x67, 0x59, 0x5f,
	0xa0, 0xcb, 0x3f, 0xda, 0xb9, 0x4e, 0x55, 0x38, 0x78, 0xfc, 0x33, 0xdf, 0x7e, 0x48, 0x0d, 0xb3,
	0xe5, 0xf0, 0xaf, 0x36, 0x3d, 0x4e, 0x16, 0x9b, 0x44, 0xf0, 0xfa, 0x77, 0xd5, 0x6b, 0x98, 0x35,
	0x87, 0xff, 0x54, 0xbd, 0x46, 0x44, 0xf0, 0xba, 0xd9, 0xc6, 0x33, 0x09, 0xe5, 0xdd, 0xd3, 0xeb,
	0x26, 0x8b, 0xb1, 0x35, 0xda, 0x2c, 0x76, 0xf0, 0x5e, 0xc8, 0xbb, 0xc2, 0x74, 0x85, 0x83, 0xf7,
	0x83, 0x04, 0x15, 0x18, 0x73, 0x87, 0xff, 0x36, 0x03, 0x15, 0xda, 0x7f, 0xd0, 0x64, 0x0a, 0x9d,
	0x3f, 0x6c, 0x63, 0xf5, 0x77, 0xb4, 0xe2, 0xa8, 0x57, 0xb2, 0x06, 0x8f, 0x2a, 0x04, 0xec, 0xc0,
	0x3a, 0x81, 0x9d, 0xa4, 0x0b, 0x8f, 0x29, 0x4a, 0xc9, 0xc1, 0x61, 0x4f, 0x09, 0x2d, 0x05, 0x5e,
	0xb1, 0xa8, 0x5c, 0x05, 0x1b, 0xd6, 0xe4, 0x35, 0x8b, 0x5b, 0x55, 0x29, 0xa9, 0xfa, 0xd2, 0xc1,
	0x75, 0x8b, 0x15, 0x36, 0x86, 0x09, 0x2a, 0xdc, 0xb0, 0xf4, 0x76, 0x72, 0x6c, 0x1c, 0x5b, 0x04,
	0x7e, 0xd5, 0xa2, 0xb8, 0x55, 0x83, 0x2f, 0x6a, 0xa9, 0xe0, 0x35, 0x8b, 0xe2, 0x36, 0x89, 0x10,
	0xf6, 0x75, 0x4b, 0x4f, 0x91, 0xa3, 0x63, 0xc8, 0x22, 0xea, 0x1b, 0x63, 0xa2, 0xae, 0x65, 0xd2,
	0xc1, 0x9b, 0x63, 0xa2, 0x22, 0x11, 0xa2, 0xbe, 0x35, 0x26, 0x6a, 0x20, 0x8b, 0xa8, 0x6f, 0x5b,
	0x3a, 0x43, 0xa6, 0xd3, 0x0c, 0x6f, 0x5d, 0xaa, 0x2c, 0x3c, 0xed, 0x50, 0xc3, 0xd1, 0x3a, 0xc4,
	0x78, 0xc6, 0xd1, 0x43, 0xe4, 0x40, 0xc0, 0x8a, 0x06, 0x00, 0xcf, 0x3a, 0xbc, 0xf4, 0x01, 0xb2,
	0x89, 0x85, 0xe7, 0x1c, 0x1e, 0xbf, 0x50, 0x5c, 0x1b, 0x2b, 0x12, 0xa1, 0x9c, 0x77, 0x6c, 0x55,
	0xc0, 0x13, 0x19, 0x8a, 0x5f, 0x87, 0x43, 0xcc, 0x27, 0x33, 0xac, 0x8c, 0x32, 0x15, 0xee, 0x01,
	0xfc, 0x30, 0xc3, 0xcb, 0xd1, 0xc0, 0x83, 0xcf, 0x8f, 0x1a, 0x3e, 0xa1, 0x34, 0xe0, 0xa7, 0x19,
	0x0a, 0xd0, 0xc0, 0xf3, 0x8d, 0x7e, 0x96, 0xe1, 0x59, 0x96, 0xc9, 0xbc, 0x55, 0xe7, 0xdb, 0xfd,
	0x2e, 0xc3, 0x66, 0x79, 0x0b, 0x36, 0xf8, 0xbf, 0x98, 0xa1, 0x20, 0x58, 0x8c, 0x1d, 0x79, 0xa6,
	0xf0, 0xfa, 0x20, 0x24, 0x52, 0xc1, 0x82, 0xed, 0x87, 0x19, 0xf6, 0x87, 0x21, 0x5e, 0xf4, 0x9e,
	0x6f, 0xf7, 0xf1, 0xdc, 0xaa, 0x60, 0xb0, 0x7e, 0xa4, 0x5f, 0xb6, 0x2e, 0xaa, 0xfc, 0x3b, 0x15,
	0xeb, 0xd2, 0x77, 0x7c, 0xb7, 0x62, 0x5d, 0xdc, 0x96, 0xef, 0x57, 0xac, 0x4b, 0x9d, 0xea, 0x07,
	0x23, 0x62, 0xf4, 0x86, 0xe4, 0xa9, 0xff, 0xb8, 0x8f, 0x5a, 0x35, 0x89, 0xe0, 0xf5, 0x93, 0x3e,
	0xde, 0x88, 0x0a, 0x59, 0x7c, 0xc4, 0xcf, 0xfb, 0xa8, 0xe2, 0x18, 0x26, 0xf8, 0x3d, 0xd5, 0xf4,
	0x2b, 0x12, 0x7c, 0xb6, 0xe9, 0x57, 0xca, 0xf2, 0xb9, 0xa6, 0x5f, 0x21, 0xc3, 0xf3, 0x4d, 0xbf,
	0x92, 0x16, 0x2f, 0xf4, 0xb1, 0xfa, 0x90, 0x0d, 0x33, 0xc2, 0x4b, 0x7d, 0xac, 0xcf, 0xe1, 0x32,
	0x58, 0xfc, 0xbe, 0x8f, 0xaf, 0xd0, 0x08, 0x2a, 0x8a, 0xfd, 0xe5, 0x3e, 0xbd, 0x9b, 0x2c, 0x8d,
	0xd0, 0x88, 0x45, 0xbd, 0x61, 0xe3, 0xf1, 0x79, 0x1f, 0x19, 0xde, 0xb5, 0xfe, 0xf2, 0x06, 0x99,
	0x0e, 0x23, 0x81, 0x1b, 0xa4, 0x02, 0x07, 0x8e, 0xd1, 0xc2, 0x67, 0x6a, 0x55, 0xe9, 0x75, 0x05,
	0xb7, 0xd1, 0x45, 0x42, 0xf7, 0xe0, 0xd1, 0xd3, 0xde, 0xc2, 0xd1, 0xa8, 0x84, 0xe3, 0xa3, 0x16,
	0x79, 0x16, 0x45, 0x3a, 0x53, 0x0e, 0xf6, 0x2d, 0x3f, 0x7e, 0x80, 0x10, 0x61, 0x8c, 0xd2, 0x3e,
	0xd2, 0x5c, 0xe0, 0x7c, 0xb3, 0xb7, 0xf2, 0x7a, 0x35, 0x8f, 0x5b, 0x82, 0xb8, 0x58, 0x61, 0xd8,
	0x63, 0xf7, 0xd1, 0x4f, 0x92, 0x3b, 0x4a, 0x78, 0x3e, 0x45, 0x4a, 0xe5, 0xb5, 0xeb, 0x09, 0x53,
	0x4c, 0x86, 0x70, 0x0e, 0xe7, 0x87, 0x92, 0x95, 0xd2, 0x3e, 0x35, 0xda, 0xe9, 0x48, 0xc7, 0xb0,
	0x85, 0xd3, 0x4c, 0x89, 0x73, 0xac, 0x5b, 0xe1, 0xef, 0xc1, 0x39, 0xa9, 0xc4, 0x87, 0xfb, 0xbd,
	0x96, 0x89, 0x4c, 0xc0, 0xbd, 0xf4, 0x76, 0x72, 0xbc, 0xba, 0xb9, 0x56, 0xc1, 0x39, 0xbc, 0xbc,
	0x16, 0xce, 0xe3, 0x24, 0x54, 0x32, 0xc8, 0xa7, 0x69, 0x61, 0x8c, 0xb7, 0xc2, 0xda, 0x30, 0xe3,
	0xc1, 0x36, 0x3d, 0x42, 0xe6, 0x2b, 0xb9, 0xb9, 0x3c, 0x10, 0x5c, 0xa8, 0x65, 0xbd, 0x2e, 0x5d,
	0x4f, 0x67, 0xd8, 0x2f, 0xba, 0x70, 0xf1, 0x16, 0x5c, 0x26, 0x39, 0xdc, 0x87, 0xe3, 0xdb, 0x38,
	0x3f, 0x61, 0x12, 0xc9, 0xe1, 0x12, 0x1e, 0x45, 0x89, 0x2e, 0xa5, 0x23, 0x39, 0x5c, 0xc6, 0x01,
	0xb7, 0x2c, 0x87, 0x30, 0x89, 0xcf, 0x14, 0x8b, 0x65, 0x5f, 0xc0, 0x4e, 0xed, 0x14, 0xd0, 0x15,
	0x77, 0xbc, 0x32, 0x06, 0x4f, 0x25, 0x87, 0xfb, 0x6b, 0xda, 0x21, 0x6e, 0x84, 0xc5, 0x91, 0x76,
	0x77, 0x8c, 0x8b, 0x93, 0x38, 0xea, 0xce, 0x91, 0x99, 0x12, 0x6e, 0xd7, 0x62, 0x78, 0xb1, 0x15,
	0x5a, 0x66, 0xe9, 0xf4, 0x99, 0x63, 0xde, 0x62, 0xcf, 0x7d, 0xa9, 0x45, 0xef, 0x22, 0x77, 0xd6,
	0xe4, 0x5b, 0x91, 0x8a, 0x7b, 0xc7, 0x0c, 0x8e, 0x41, 0x58, 0x73, 0x92, 0xc3, 0xcb, 0x2d, 0x7a,
	0x9a, 0x7c, 0xba, 0x1e, 0x62, 0x9d, 0x19, 0xd1, 0xd3, 0xf8, 0xae, 0x77, 0xfd, 0x0a, 0x93, 0x71,
	0x66, 0x84, 0x4f, 0x06, 0xb8, 0xe5, 0x2b, 0x1f, 0xd9, 0xde, 0x08, 0x2e, 0x2d, 0x5c, 0x6b, 0xd1,
	0x4f, 0x54, 0x8e, 0x9a, 0x77, 0x3c, 0x8e, 0x96, 0xc2, 0x78, 0xb1, 0x11, 0x89, 0x34, 0xfc, 0x79,
	0xb8, 0xde, 0xa2, 0x4b, 0xe4, 0x64, 0xc9, 0x28, 0x5c, 0x88, 0x61, 0x29, 0x08, 0x63, 0xb4, 0x81,
	0x1b, 0x2d, 0x7c, 0x9b, 0xea, 0x36, 0x45, 0x51, 0x48, 0x05, 0xaf, 0xb6, 0xe8, 0xc9, 0xca, 0xf1,
	0x05, 0x5e, 0xf2, 0xc2, 0xfd, 0xb5, 0x16, 0xde, 0xe6, 0xe6, 0x16, 0x28, 0x88, 0xce, 0xff, 0x92,
	0xe5, 0x86, 0xaf, 0xd7, 0xe3, 0xe0, 0x16, 0xdc, 0xba, 0xbc, 0x76, 0xe1, 0x8d, 0xba, 0xae, 0xf8,
	0xfd, 0x1d, 0x66, 0x45, 0xd1, 0x19, 0xf1, 0xeb, 0xb9, 0xe0, 0xf0, 0x87, 0x7a, 0xba, 0x41, 0xa7,
	0xbd, 0x4f, 0x7e, 0x73, 0xdc, 0x36, 0x7b, 0xd5, 0xf6, 0x56, 0xfd, 0x64, 0x91, 0xce, 0x33, 0x78,
	0xbb, 0x15, 0x1e, 0xb0, 0xd2, 0xc5, 0x0b, 0x97, 0x2a, 0xcf, 0xfe, 0x9d, 0x16, 0xbd, 0x93, 0x9c,
	0x18, 0x97, 0x5e, 0xf8, 0x0c, 0xe6, 0x18, 0xbc, 0xdb, 0x0a, 0x6f, 0x5c, 0xa9, 0x92, 0x7a, 0x7a,
	0xdd, 0x8b, 0x8d, 0x54, 0x1a, 0xc1, 0xe1, 0x8f, 0x75, 0x16, 0xfd, 0x9c, 0x5e, 0x15, 0xca, 0x4b,
	0x0e, 0x7f, 0x6a, 0x61, 0x0f, 0xae, 0x67, 0xdd, 0xd3, 0xeb, 0xf0, 0xe7, 0xfa, 0xf7, 0x22, 0xd3,
	0xcb, 0x36, 0xa4, 0x0a, 0x4a, 0xc3, 0xe3, 0x13, 0xb5, 0x3a, 0xe8, 0xc4, 0x3a, 0xfc, 0x2b, 0xed,
	0x0c, 0x82, 0xba, 0xc1, 0xe8, 0xe6, 0x44, 0x2d, 0x7b, 0xa9, 0xfa, 0x2c, 0x96, 0xbc, 0x38, 0x4b,
	0xfc, 0xe3, 0x76, 0x6d, 0x0a, 0xe7, 0xa9, 0x31, 0x26, 0x85, 0x76, 0x70, 0x7d, 0xaa, 0x96, 0xc8,
	0xd0, 0x20, 0x65, 0xd6, 0xae, 0x73, 0xb8, 0x31, 0x45, 0x3f, 0x43, 0xee, 0x1a, 0xc3, 0xcb, 0xc4,
	0x87, 0xff, 0x51, 0xa5, 0xfb, 0x01, 0x4f, 0x4f, 0xd3, 0x2f, 0x90, 0xcf, 0xff, 0x1f, 0x63, 0x91,
	0xa4, 0x6e, 0xe0, 0x3b, 0x9a, 0x0f, 0xc2, 0x07, 0xb3, 0x38, 0xd6, 0xeb, 0x82, 0xc3, 0x33, 0xd3,
	0xf4, 0xb3, 0xe4, 0xee, 0x4a, 0x07, 0x2c, 0xcf, 0x54, 0x8e, 0xd9, 0xd5, 0x60, 0x2f, 0x36, 0xa4,
	0x75, 0xf0, 0x04, 0xa1, 0x9f, 0x23, 0x9f, 0xba, 0xa5, 0x35, 0x1a, 0x4a, 0x65, 0x25, 0xcf, 0x1d,
	0xe1, 0x49, 0xb2, 0xfc, 0x48, 0x8b, 0xec, 0xe7, 0x5b, 0x0f, 0x6d, 0x9f, 0xdd, 0xf2, 0xee, 0xe1,
	0x2b, 0x5b, 0xf8, 0xe4, 0xe4, 0x4b, 0x5c, 0x79, 0x99, 0x9e, 0xdf, 0xb9, 0xbc, 0x05, 0x2d, 0xec,
	0x24, 0x25, 0x98, 0x5d, 0x3e, 0xb7, 0xbb, 0xb3, 0x7d, 0x0e, 0xf6, 0xe1, 0x5f, 0xcc, 0x8a, 0xf9,
	0xe6, 0x39, 0x98, 0xc0, 0x8e, 0xd4, 0x34, 0x46, 0x6a, 0xb2, 0x16, 0x67, 0xf8, 0xa4, 0xb5, 0x97,
	0x2f, 0xe4, 0x53, 0x7c, 0x5e, 0x41, 0xf9, 0x9f, 0x58, 0xec, 0x92, 0x75, 0xcc, 0x2b, 0x6d, 0x12,
	0x16, 0xc3, 0x6d, 0xa3, 0xb7, 0xae, 0x4c, 0x72, 0x69, 0x59, 0x27, 0x16, 0xd0, 0x1a, 0xeb, 0xba,
	0x62, 0xf4, 0x19, 0xa1, 0x60, 0xdf, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x4a, 0xe0, 0xf7,
	0xd7, 0x11, 0x00, 0x00,
}
