// Code generated by protoc-gen-go.
// source: IM.Loadbalance.proto
// DO NOT EDIT!

package youmai

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Regist_CommunicationService struct {
	ServerIp         *string `protobuf:"bytes,1,opt,name=server_ip,json=serverIp" json:"server_ip,omitempty"`
	ServerPort       *int32  `protobuf:"varint,2,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Regist_CommunicationService) Reset()                    { *m = Regist_CommunicationService{} }
func (m *Regist_CommunicationService) String() string            { return proto.CompactTextString(m) }
func (*Regist_CommunicationService) ProtoMessage()               {}
func (*Regist_CommunicationService) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Regist_CommunicationService) GetServerIp() string {
	if m != nil && m.ServerIp != nil {
		return *m.ServerIp
	}
	return ""
}

func (m *Regist_CommunicationService) GetServerPort() int32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

type Request_IP struct {
	DeviceId         *string `protobuf:"bytes,1,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	UserId           *int32  `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Request_IP) Reset()                    { *m = Request_IP{} }
func (m *Request_IP) String() string            { return proto.CompactTextString(m) }
func (*Request_IP) ProtoMessage()               {}
func (*Request_IP) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *Request_IP) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *Request_IP) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type Request_IP_Ack struct {
	Ip               *string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port             *int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Request_IP_Ack) Reset()                    { *m = Request_IP_Ack{} }
func (m *Request_IP_Ack) String() string            { return proto.CompactTextString(m) }
func (*Request_IP_Ack) ProtoMessage()               {}
func (*Request_IP_Ack) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *Request_IP_Ack) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *Request_IP_Ack) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

type ReportOnliners struct {
	Onliners         *int32 `protobuf:"varint,1,opt,name=onliners" json:"onliners,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ReportOnliners) Reset()                    { *m = ReportOnliners{} }
func (m *ReportOnliners) String() string            { return proto.CompactTextString(m) }
func (*ReportOnliners) ProtoMessage()               {}
func (*ReportOnliners) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *ReportOnliners) GetOnliners() int32 {
	if m != nil && m.Onliners != nil {
		return *m.Onliners
	}
	return 0
}

func init() {
	proto.RegisterType((*Regist_CommunicationService)(nil), "youmai.Regist_CommunicationService")
	proto.RegisterType((*Request_IP)(nil), "youmai.Request_IP")
	proto.RegisterType((*Request_IP_Ack)(nil), "youmai.Request_IP_Ack")
	proto.RegisterType((*ReportOnliners)(nil), "youmai.Report_onliners")
}

func init() { proto.RegisterFile("IM.Loadbalance.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8e, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0xd9, 0xc5, 0xd6, 0x76, 0x84, 0x0a, 0xb9, 0xb8, 0xd8, 0x83, 0x65, 0x4f, 0xbd, 0xd8,
	0x93, 0x5f, 0x40, 0x3d, 0x2d, 0x28, 0x94, 0x78, 0x12, 0x0f, 0x21, 0x26, 0x83, 0x0c, 0x76, 0x33,
	0x31, 0x7f, 0x0a, 0x7e, 0x7b, 0x49, 0xb7, 0x5d, 0x7b, 0x7b, 0xef, 0x17, 0xf2, 0x7b, 0x03, 0xcd,
	0x3b, 0xe7, 0x57, 0x4d, 0x9b, 0x17, 0xd6, 0xf6, 0x53, 0xef, 0xb4, 0x33, 0xb8, 0xf1, 0x81, 0x13,
	0x8b, 0xe9, 0x2f, 0xe7, 0x5e, 0x53, 0xfb, 0x01, 0x4b, 0x89, 0x5f, 0x14, 0x93, 0x7a, 0xe6, 0xbe,
	0xcf, 0x8e, 0x8c, 0x4e, 0xc4, 0xee, 0x0d, 0xc3, 0x9e, 0x0c, 0x8a, 0x25, 0xcc, 0x23, 0x86, 0x3d,
	0x06, 0x45, 0xbe, 0xa9, 0x56, 0xd5, 0x7a, 0x2e, 0x67, 0x03, 0xe8, 0xbc, 0xb8, 0x83, 0xab, 0xe3,
	0xa3, 0xe7, 0x90, 0x9a, 0x7a, 0x55, 0xad, 0x27, 0x12, 0x06, 0xb4, 0xe5, 0x90, 0xda, 0x27, 0x00,
	0x89, 0x3f, 0x19, 0x63, 0x52, 0xdd, 0xb6, 0xb8, 0x2c, 0x16, 0xab, 0x22, 0x7b, 0x72, 0x0d, 0xa0,
	0xb3, 0xe2, 0x06, 0x2e, 0x73, 0x2c, 0x33, 0xf6, 0xe8, 0x99, 0x96, 0xda, 0xd9, 0xf6, 0x01, 0x16,
	0xff, 0x0e, 0xf5, 0x68, 0xbe, 0xc5, 0x02, 0xea, 0xf1, 0x98, 0x9a, 0xbc, 0x10, 0x70, 0x71, 0xb6,
	0x7f, 0xc8, 0xed, 0x3d, 0x5c, 0x4b, 0x2c, 0x49, 0xb1, 0xdb, 0x91, 0xc3, 0x10, 0xc5, 0x2d, 0xcc,
	0x4e, 0xf9, 0xf0, 0x79, 0x22, 0xc7, 0xfe, 0x17, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x70, 0x11, 0x24,
	0x28, 0x01, 0x00, 0x00,
}
