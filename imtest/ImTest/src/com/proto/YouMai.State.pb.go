// Code generated by protoc-gen-go.
// source: IM.State.proto
// DO NOT EDIT!

package youmai

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UserStateBroadcast struct {
	UserId           *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	NodeId           *int32  `protobuf:"varint,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Sockfd           *int32  `protobuf:"varint,3,opt,name=sockfd" json:"sockfd,omitempty"`
	Online           *bool   `protobuf:"varint,4,opt,name=online" json:"online,omitempty"`
	Time             *int64  `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	Version          *int32  `protobuf:"varint,6,opt,name=version" json:"version,omitempty"`
	DeviceType       *int32  `protobuf:"varint,7,opt,name=device_type,json=deviceType" json:"device_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserStateBroadcast) Reset()                    { *m = UserStateBroadcast{} }
func (m *UserStateBroadcast) String() string            { return proto.CompactTextString(m) }
func (*UserStateBroadcast) ProtoMessage()               {}
func (*UserStateBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *UserStateBroadcast) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *UserStateBroadcast) GetNodeId() int32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *UserStateBroadcast) GetSockfd() int32 {
	if m != nil && m.Sockfd != nil {
		return *m.Sockfd
	}
	return 0
}

func (m *UserStateBroadcast) GetOnline() bool {
	if m != nil && m.Online != nil {
		return *m.Online
	}
	return false
}

func (m *UserStateBroadcast) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *UserStateBroadcast) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *UserStateBroadcast) GetDeviceType() int32 {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return 0
}

// busi msg report state to login server
type UserStateReport struct {
	UserId           *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	NodeId           *int32  `protobuf:"varint,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Online           *bool   `protobuf:"varint,3,opt,name=online" json:"online,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserStateReport) Reset()                    { *m = UserStateReport{} }
func (m *UserStateReport) String() string            { return proto.CompactTextString(m) }
func (*UserStateReport) ProtoMessage()               {}
func (*UserStateReport) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *UserStateReport) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *UserStateReport) GetNodeId() int32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *UserStateReport) GetOnline() bool {
	if m != nil && m.Online != nil {
		return *m.Online
	}
	return false
}

func init() {
	proto.RegisterType((*UserStateBroadcast)(nil), "youmai.UserStateBroadcast")
	proto.RegisterType((*UserStateReport)(nil), "youmai.UserStateReport")
}

func init() { proto.RegisterFile("IM.State.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x8f, 0xb1, 0x4a, 0x04, 0x31,
	0x10, 0x86, 0x89, 0x7b, 0x97, 0xd5, 0xb1, 0x10, 0xa6, 0xd0, 0x74, 0x2e, 0x57, 0xa5, 0xba, 0x87,
	0xb0, 0xbb, 0xc2, 0x26, 0x6a, 0x21, 0x16, 0x47, 0xd8, 0x8c, 0x10, 0xf4, 0x32, 0x21, 0xc9, 0x1e,
	0xec, 0x03, 0xfa, 0x5e, 0x92, 0xec, 0x2a, 0xd6, 0x76, 0xf3, 0xfd, 0x1f, 0x0c, 0xff, 0x0f, 0xf8,
	0xca, 0xd3, 0xa3, 0xf5, 0xfb, 0xa7, 0x62, 0x0b, 0xed, 0x63, 0xe2, 0xc2, 0x28, 0x67, 0x9e, 0x4e,
	0xd6, 0xef, 0xbe, 0x04, 0xe0, 0x4b, 0xa6, 0xd4, 0xdc, 0x43, 0x62, 0xeb, 0x46, 0x9b, 0x0b, 0xde,
	0x41, 0x3f, 0x65, 0x4a, 0x47, 0xef, 0x94, 0x18, 0x84, 0xbe, 0x32, 0xb2, 0xe2, 0xc1, 0x55, 0x11,
	0xd8, 0x51, 0x15, 0x17, 0x83, 0xd0, 0x5b, 0x23, 0x2b, 0x1e, 0x1c, 0xde, 0x82, 0xcc, 0x3c, 0x7e,
	0xbc, 0x3b, 0xd5, 0x2d, 0xf9, 0x42, 0x35, 0xe7, 0xf0, 0xe9, 0x03, 0xa9, 0xcd, 0x20, 0xf4, 0xa5,
	0x59, 0x09, 0x11, 0x36, 0xc5, 0x9f, 0x48, 0x6d, 0x07, 0xa1, 0x3b, 0xd3, 0x6e, 0x54, 0xd0, 0x9f,
	0x29, 0x65, 0xcf, 0x41, 0xc9, 0xf6, 0xe4, 0x07, 0xf1, 0x1e, 0xae, 0x1d, 0x9d, 0xfd, 0x48, 0xc7,
	0x32, 0x47, 0x52, 0x7d, 0xb3, 0xb0, 0x44, 0xcf, 0x73, 0xa4, 0xdd, 0x1b, 0xdc, 0xfc, 0xce, 0x30,
	0x14, 0x39, 0xfd, 0x73, 0xc3, 0xda, 0xb5, 0xfb, 0xdb, 0xf5, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xcb,
	0xc2, 0xa6, 0x64, 0x41, 0x01, 0x00, 0x00,
}
