// Code generated by protoc-gen-go.
// source: IM.Server.proto
// DO NOT EDIT!

package youmai

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type NodeStatus int32

const (
	NodeStatus_NODE_UNABLE  NodeStatus = 0
	NodeStatus_NODE_CONNECT NodeStatus = 1
	NodeStatus_NODE_REGIST  NodeStatus = 2
	NodeStatus_NODE_AUTH    NodeStatus = 3
	NodeStatus_NODE_ABLE    NodeStatus = 4
	NodeStatus_NODE_TIMEOUT NodeStatus = 5
)

var NodeStatus_name = map[int32]string{
	0: "NODE_UNABLE",
	1: "NODE_CONNECT",
	2: "NODE_REGIST",
	3: "NODE_AUTH",
	4: "NODE_ABLE",
	5: "NODE_TIMEOUT",
}
var NodeStatus_value = map[string]int32{
	"NODE_UNABLE":  0,
	"NODE_CONNECT": 1,
	"NODE_REGIST":  2,
	"NODE_AUTH":    3,
	"NODE_ABLE":    4,
	"NODE_TIMEOUT": 5,
}

func (x NodeStatus) Enum() *NodeStatus {
	p := new(NodeStatus)
	*p = x
	return p
}
func (x NodeStatus) String() string {
	return proto.EnumName(NodeStatus_name, int32(x))
}
func (x *NodeStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NodeStatus_value, data, "NodeStatus")
	if err != nil {
		return err
	}
	*x = NodeStatus(value)
	return nil
}
func (NodeStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

type RegisterServerReq struct {
	ServerIp         *string `protobuf:"bytes,1,opt,name=server_ip,json=serverIp" json:"server_ip,omitempty"`
	ServerPort       *int32  `protobuf:"varint,2,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	ServiceType      *int32  `protobuf:"varint,3,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RegisterServerReq) Reset()                    { *m = RegisterServerReq{} }
func (m *RegisterServerReq) String() string            { return proto.CompactTextString(m) }
func (*RegisterServerReq) ProtoMessage()               {}
func (*RegisterServerReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *RegisterServerReq) GetServerIp() string {
	if m != nil && m.ServerIp != nil {
		return *m.ServerIp
	}
	return ""
}

func (m *RegisterServerReq) GetServerPort() int32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *RegisterServerReq) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

type RegisterServerRsp struct {
	NodeId           *int32 `protobuf:"varint,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	ResultCode       *int32 `protobuf:"varint,2,opt,name=result_code,json=resultCode" json:"result_code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegisterServerRsp) Reset()                    { *m = RegisterServerRsp{} }
func (m *RegisterServerRsp) String() string            { return proto.CompactTextString(m) }
func (*RegisterServerRsp) ProtoMessage()               {}
func (*RegisterServerRsp) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *RegisterServerRsp) GetNodeId() int32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *RegisterServerRsp) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

type ConfigInfo struct {
	ServiceType      *int32  `protobuf:"varint,1,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	Passwd           *string `protobuf:"bytes,2,opt,name=passwd" json:"passwd,omitempty"`
	ServerIp         *string `protobuf:"bytes,3,opt,name=server_ip,json=serverIp" json:"server_ip,omitempty"`
	ServerPort       *int32  `protobuf:"varint,4,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	IsEnable         *bool   `protobuf:"varint,5,opt,name=is_enable,json=isEnable" json:"is_enable,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ConfigInfo) Reset()                    { *m = ConfigInfo{} }
func (m *ConfigInfo) String() string            { return proto.CompactTextString(m) }
func (*ConfigInfo) ProtoMessage()               {}
func (*ConfigInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *ConfigInfo) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *ConfigInfo) GetPasswd() string {
	if m != nil && m.Passwd != nil {
		return *m.Passwd
	}
	return ""
}

func (m *ConfigInfo) GetServerIp() string {
	if m != nil && m.ServerIp != nil {
		return *m.ServerIp
	}
	return ""
}

func (m *ConfigInfo) GetServerPort() int32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *ConfigInfo) GetIsEnable() bool {
	if m != nil && m.IsEnable != nil {
		return *m.IsEnable
	}
	return false
}

type NodeState struct {
	ServiceType      *int32 `protobuf:"varint,1,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	NodeId           *int32 `protobuf:"varint,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	State            *int32 `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NodeState) Reset()                    { *m = NodeState{} }
func (m *NodeState) String() string            { return proto.CompactTextString(m) }
func (*NodeState) ProtoMessage()               {}
func (*NodeState) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *NodeState) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *NodeState) GetNodeId() int32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *NodeState) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

type NodeInfo struct {
	ServiceType      *int32   `protobuf:"varint,1,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	NodeId           *int32   `protobuf:"varint,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	ServerIp         *string  `protobuf:"bytes,3,opt,name=server_ip,json=serverIp" json:"server_ip,omitempty"`
	ServerPort       *int32   `protobuf:"varint,4,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	IsEnable         *bool    `protobuf:"varint,5,opt,name=is_enable,json=isEnable" json:"is_enable,omitempty"`
	RouteStrategy    *int32   `protobuf:"varint,6,opt,name=route_strategy,json=routeStrategy" json:"route_strategy,omitempty"`
	UserList         []string `protobuf:"bytes,7,rep,name=user_list,json=userList" json:"user_list,omitempty"`
	Slots            *string  `protobuf:"bytes,10,opt,name=slots" json:"slots,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *NodeInfo) Reset()                    { *m = NodeInfo{} }
func (m *NodeInfo) String() string            { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()               {}
func (*NodeInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *NodeInfo) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *NodeInfo) GetNodeId() int32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *NodeInfo) GetServerIp() string {
	if m != nil && m.ServerIp != nil {
		return *m.ServerIp
	}
	return ""
}

func (m *NodeInfo) GetServerPort() int32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *NodeInfo) GetIsEnable() bool {
	if m != nil && m.IsEnable != nil {
		return *m.IsEnable
	}
	return false
}

func (m *NodeInfo) GetRouteStrategy() int32 {
	if m != nil && m.RouteStrategy != nil {
		return *m.RouteStrategy
	}
	return 0
}

func (m *NodeInfo) GetUserList() []string {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *NodeInfo) GetSlots() string {
	if m != nil && m.Slots != nil {
		return *m.Slots
	}
	return ""
}

type ServiceInfo struct {
	ServiceType      *int32      `protobuf:"varint,1,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	NodeInfoList     []*NodeInfo `protobuf:"bytes,2,rep,name=node_info_list,json=nodeInfoList" json:"node_info_list,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ServiceInfo) Reset()                    { *m = ServiceInfo{} }
func (m *ServiceInfo) String() string            { return proto.CompactTextString(m) }
func (*ServiceInfo) ProtoMessage()               {}
func (*ServiceInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *ServiceInfo) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *ServiceInfo) GetNodeInfoList() []*NodeInfo {
	if m != nil {
		return m.NodeInfoList
	}
	return nil
}

type ServerInfoBroadcast struct {
	Epoch            *int32         `protobuf:"varint,1,opt,name=epoch" json:"epoch,omitempty"`
	ServiceList      []*ServiceInfo `protobuf:"bytes,2,rep,name=service_list,json=serviceList" json:"service_list,omitempty"`
	ConfigList       []*ServiceInfo `protobuf:"bytes,3,rep,name=config_list,json=configList" json:"config_list,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ServerInfoBroadcast) Reset()                    { *m = ServerInfoBroadcast{} }
func (m *ServerInfoBroadcast) String() string            { return proto.CompactTextString(m) }
func (*ServerInfoBroadcast) ProtoMessage()               {}
func (*ServerInfoBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{6} }

func (m *ServerInfoBroadcast) GetEpoch() int32 {
	if m != nil && m.Epoch != nil {
		return *m.Epoch
	}
	return 0
}

func (m *ServerInfoBroadcast) GetServiceList() []*ServiceInfo {
	if m != nil {
		return m.ServiceList
	}
	return nil
}

func (m *ServerInfoBroadcast) GetConfigList() []*ServiceInfo {
	if m != nil {
		return m.ConfigList
	}
	return nil
}

type AuthenticationReq struct {
	ServiceType      *int32 `protobuf:"varint,1,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	NodeId           *int32 `protobuf:"varint,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthenticationReq) Reset()                    { *m = AuthenticationReq{} }
func (m *AuthenticationReq) String() string            { return proto.CompactTextString(m) }
func (*AuthenticationReq) ProtoMessage()               {}
func (*AuthenticationReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{7} }

func (m *AuthenticationReq) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *AuthenticationReq) GetNodeId() int32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

type AuthenticationRsp struct {
	ServiceType      *int32 `protobuf:"varint,1,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	NodeId           *int32 `protobuf:"varint,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	ResultCode       *int32 `protobuf:"varint,3,opt,name=result_code,json=resultCode" json:"result_code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthenticationRsp) Reset()                    { *m = AuthenticationRsp{} }
func (m *AuthenticationRsp) String() string            { return proto.CompactTextString(m) }
func (*AuthenticationRsp) ProtoMessage()               {}
func (*AuthenticationRsp) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{8} }

func (m *AuthenticationRsp) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *AuthenticationRsp) GetNodeId() int32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *AuthenticationRsp) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

type PingReq struct {
	ServiceType      *int32       `protobuf:"varint,1,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	NodeId           *int32       `protobuf:"varint,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Epoch            *int32       `protobuf:"varint,3,opt,name=epoch" json:"epoch,omitempty"`
	StateList        []*NodeState `protobuf:"bytes,4,rep,name=state_list,json=stateList" json:"state_list,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *PingReq) Reset()                    { *m = PingReq{} }
func (m *PingReq) String() string            { return proto.CompactTextString(m) }
func (*PingReq) ProtoMessage()               {}
func (*PingReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{9} }

func (m *PingReq) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *PingReq) GetNodeId() int32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *PingReq) GetEpoch() int32 {
	if m != nil && m.Epoch != nil {
		return *m.Epoch
	}
	return 0
}

func (m *PingReq) GetStateList() []*NodeState {
	if m != nil {
		return m.StateList
	}
	return nil
}

type PongRsp struct {
	ServiceType      *int32 `protobuf:"varint,1,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	NodeId           *int32 `protobuf:"varint,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PongRsp) Reset()                    { *m = PongRsp{} }
func (m *PongRsp) String() string            { return proto.CompactTextString(m) }
func (*PongRsp) ProtoMessage()               {}
func (*PongRsp) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{10} }

func (m *PongRsp) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *PongRsp) GetNodeId() int32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

type RegisterCmdReq struct {
	ServiceType      *int32      `protobuf:"varint,1,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	NodeId           *int32      `protobuf:"varint,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	CmdList          []COMMANDID `protobuf:"varint,3,rep,name=cmd_list,json=cmdList,enum=youmai.COMMANDID" json:"cmd_list,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *RegisterCmdReq) Reset()                    { *m = RegisterCmdReq{} }
func (m *RegisterCmdReq) String() string            { return proto.CompactTextString(m) }
func (*RegisterCmdReq) ProtoMessage()               {}
func (*RegisterCmdReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{11} }

func (m *RegisterCmdReq) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *RegisterCmdReq) GetNodeId() int32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *RegisterCmdReq) GetCmdList() []COMMANDID {
	if m != nil {
		return m.CmdList
	}
	return nil
}

// user client query
type ServerState struct {
	ServiceType       *int32       `protobuf:"varint,1,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	NodeId            *int32       `protobuf:"varint,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	State             *int32       `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
	ConnNodeStateList []*NodeState `protobuf:"bytes,4,rep,name=conn_node_state_list,json=connNodeStateList" json:"conn_node_state_list,omitempty"`
	RouteStragry      *int32       `protobuf:"varint,5,opt,name=route_stragry,json=routeStragry" json:"route_stragry,omitempty"`
	UserList          []string     `protobuf:"bytes,6,rep,name=user_list,json=userList" json:"user_list,omitempty"`
	Ip                *string      `protobuf:"bytes,7,opt,name=ip" json:"ip,omitempty"`
	Port              *int32       `protobuf:"varint,8,opt,name=port" json:"port,omitempty"`
	SlotsStr          *string      `protobuf:"bytes,10,opt,name=slots_str,json=slotsStr" json:"slots_str,omitempty"`
	XXX_unrecognized  []byte       `json:"-"`
}

func (m *ServerState) Reset()                    { *m = ServerState{} }
func (m *ServerState) String() string            { return proto.CompactTextString(m) }
func (*ServerState) ProtoMessage()               {}
func (*ServerState) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{12} }

func (m *ServerState) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *ServerState) GetNodeId() int32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *ServerState) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *ServerState) GetConnNodeStateList() []*NodeState {
	if m != nil {
		return m.ConnNodeStateList
	}
	return nil
}

func (m *ServerState) GetRouteStragry() int32 {
	if m != nil && m.RouteStragry != nil {
		return *m.RouteStragry
	}
	return 0
}

func (m *ServerState) GetUserList() []string {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *ServerState) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *ServerState) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *ServerState) GetSlotsStr() string {
	if m != nil && m.SlotsStr != nil {
		return *m.SlotsStr
	}
	return ""
}

type ServiceState struct {
	ServiceType      *int32         `protobuf:"varint,1,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	ServerStateList  []*ServerState `protobuf:"bytes,2,rep,name=server_state_list,json=serverStateList" json:"server_state_list,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ServiceState) Reset()                    { *m = ServiceState{} }
func (m *ServiceState) String() string            { return proto.CompactTextString(m) }
func (*ServiceState) ProtoMessage()               {}
func (*ServiceState) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{13} }

func (m *ServiceState) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *ServiceState) GetServerStateList() []*ServerState {
	if m != nil {
		return m.ServerStateList
	}
	return nil
}

type ClusterState struct {
	ClusterStateList []*ServiceState `protobuf:"bytes,1,rep,name=cluster_state_list,json=clusterStateList" json:"cluster_state_list,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ClusterState) Reset()                    { *m = ClusterState{} }
func (m *ClusterState) String() string            { return proto.CompactTextString(m) }
func (*ClusterState) ProtoMessage()               {}
func (*ClusterState) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{14} }

func (m *ClusterState) GetClusterStateList() []*ServiceState {
	if m != nil {
		return m.ClusterStateList
	}
	return nil
}

type ConfigSetReq struct {
	Cmd              []string `protobuf:"bytes,1,rep,name=cmd" json:"cmd,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ConfigSetReq) Reset()                    { *m = ConfigSetReq{} }
func (m *ConfigSetReq) String() string            { return proto.CompactTextString(m) }
func (*ConfigSetReq) ProtoMessage()               {}
func (*ConfigSetReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{15} }

func (m *ConfigSetReq) GetCmd() []string {
	if m != nil {
		return m.Cmd
	}
	return nil
}

type ConfigSetRsp struct {
	Reply            *string `protobuf:"bytes,1,opt,name=reply" json:"reply,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ConfigSetRsp) Reset()                    { *m = ConfigSetRsp{} }
func (m *ConfigSetRsp) String() string            { return proto.CompactTextString(m) }
func (*ConfigSetRsp) ProtoMessage()               {}
func (*ConfigSetRsp) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{16} }

func (m *ConfigSetRsp) GetReply() string {
	if m != nil && m.Reply != nil {
		return *m.Reply
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisterServerReq)(nil), "youmai.RegisterServerReq")
	proto.RegisterType((*RegisterServerRsp)(nil), "youmai.RegisterServerRsp")
	proto.RegisterType((*ConfigInfo)(nil), "youmai.ConfigInfo")
	proto.RegisterType((*NodeState)(nil), "youmai.NodeState")
	proto.RegisterType((*NodeInfo)(nil), "youmai.NodeInfo")
	proto.RegisterType((*ServiceInfo)(nil), "youmai.ServiceInfo")
	proto.RegisterType((*ServerInfoBroadcast)(nil), "youmai.ServerInfoBroadcast")
	proto.RegisterType((*AuthenticationReq)(nil), "youmai.AuthenticationReq")
	proto.RegisterType((*AuthenticationRsp)(nil), "youmai.AuthenticationRsp")
	proto.RegisterType((*PingReq)(nil), "youmai.PingReq")
	proto.RegisterType((*PongRsp)(nil), "youmai.PongRsp")
	proto.RegisterType((*RegisterCmdReq)(nil), "youmai.RegisterCmdReq")
	proto.RegisterType((*ServerState)(nil), "youmai.ServerState")
	proto.RegisterType((*ServiceState)(nil), "youmai.ServiceState")
	proto.RegisterType((*ClusterState)(nil), "youmai.ClusterState")
	proto.RegisterType((*ConfigSetReq)(nil), "youmai.ConfigSetReq")
	proto.RegisterType((*ConfigSetRsp)(nil), "youmai.ConfigSetRsp")
	proto.RegisterEnum("youmai.NodeStatus", NodeStatus_name, NodeStatus_value)
}

func init() { proto.RegisterFile("IM.Server.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 800 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x4d, 0x8f, 0xeb, 0x34,
	0x14, 0x25, 0xcd, 0xf4, 0x23, 0xb7, 0x9d, 0xbe, 0xd4, 0x33, 0x82, 0x88, 0xb7, 0xa0, 0x04, 0x90,
	0x46, 0x08, 0x8d, 0x10, 0x42, 0x6f, 0x8b, 0xa6, 0x9d, 0x0a, 0x2a, 0xbd, 0xb6, 0xa3, 0xb4, 0xb3,
	0x60, 0x81, 0xa2, 0x90, 0x78, 0x3a, 0x96, 0xda, 0xd8, 0xd8, 0x0e, 0xa8, 0xfc, 0x07, 0x7e, 0x00,
	0x5b, 0x16, 0xfc, 0x49, 0x36, 0xc8, 0xd7, 0x69, 0x9b, 0xd7, 0xf2, 0x50, 0xa5, 0x6a, 0x76, 0xb9,
	0x37, 0xf6, 0xb9, 0xf7, 0x1c, 0xfb, 0x1e, 0xc3, 0xd5, 0x8f, 0xbc, 0x98, 0x24, 0xec, 0x76, 0x4e,
	0xe5, 0xaf, 0x54, 0xde, 0x0a, 0xc9, 0x35, 0x27, 0x8d, 0x0d, 0x2f, 0xd6, 0x09, 0xfb, 0x98, 0x94,
	0x3f, 0x07, 0x89, 0x62, 0xa9, 0xfd, 0x17, 0x6a, 0xe8, 0x45, 0x74, 0xc9, 0x94, 0xa6, 0xd2, 0xee,
	0x89, 0xe8, 0x2f, 0xe4, 0x35, 0x78, 0x0a, 0x83, 0x98, 0x89, 0xc0, 0xe9, 0x3b, 0x37, 0x5e, 0xd4,
	0xb2, 0x89, 0xb1, 0x20, 0x9f, 0x40, 0xbb, 0xfc, 0x29, 0xb8, 0xd4, 0x41, 0xad, 0xef, 0xdc, 0xd4,
	0x23, 0xb0, 0xa9, 0x07, 0x2e, 0x35, 0xf9, 0x14, 0x3a, 0x26, 0x62, 0x29, 0x8d, 0xf5, 0x46, 0xd0,
	0xc0, 0xc5, 0x15, 0xed, 0x32, 0xb7, 0xd8, 0x08, 0x1a, 0x4e, 0x8e, 0xaa, 0x2a, 0x41, 0x3e, 0x82,
	0x66, 0xce, 0x33, 0x1a, 0xb3, 0x0c, 0x6b, 0xd6, 0xa3, 0x86, 0x09, 0xc7, 0x99, 0xa9, 0x28, 0xa9,
	0x2a, 0x56, 0x3a, 0x4e, 0x79, 0x46, 0xb7, 0x15, 0x6d, 0x6a, 0xc8, 0x33, 0x1a, 0xfe, 0xe5, 0x00,
	0x0c, 0x79, 0xfe, 0xc4, 0x96, 0xe3, 0xfc, 0x89, 0x1f, 0x35, 0xe0, 0x1c, 0x35, 0x40, 0x3e, 0x84,
	0x86, 0x48, 0x94, 0xfa, 0x2d, 0x43, 0x34, 0x2f, 0x2a, 0xa3, 0x77, 0x99, 0xbb, 0xff, 0xcf, 0xfc,
	0xe2, 0x88, 0xf9, 0x6b, 0xf0, 0x98, 0x8a, 0x69, 0x9e, 0xfc, 0xbc, 0xa2, 0x41, 0xbd, 0xef, 0xdc,
	0xb4, 0xa2, 0x16, 0x53, 0x23, 0x8c, 0xc3, 0x9f, 0xc0, 0x9b, 0xf2, 0x8c, 0xce, 0x75, 0xa2, 0xe9,
	0x29, 0x2d, 0x56, 0xe4, 0xa8, 0xbd, 0x23, 0xc7, 0x35, 0xd4, 0x95, 0x01, 0x29, 0x85, 0xb5, 0x41,
	0xf8, 0x8f, 0x03, 0x2d, 0x83, 0x7f, 0xaa, 0x02, 0xef, 0x85, 0x7f, 0x39, 0x09, 0xc8, 0x17, 0xd0,
	0x95, 0xbc, 0xd0, 0x34, 0x56, 0x5a, 0x26, 0x9a, 0x2e, 0x37, 0x41, 0x03, 0x01, 0x2e, 0x31, 0x3b,
	0x2f, 0x93, 0x06, 0xa3, 0x50, 0x54, 0xc6, 0x2b, 0xa6, 0x74, 0xd0, 0xec, 0xbb, 0xa6, 0x03, 0x93,
	0x78, 0xcb, 0x94, 0x46, 0xf6, 0x2b, 0xae, 0x55, 0x00, 0xd8, 0x9a, 0x0d, 0xc2, 0x67, 0x68, 0xcf,
	0x2d, 0xb9, 0x53, 0xf9, 0xbf, 0x81, 0xae, 0xe5, 0x9f, 0x3f, 0x71, 0x5b, 0xa9, 0xd6, 0x77, 0x6f,
	0xda, 0xdf, 0xf8, 0xb7, 0x76, 0x5a, 0x6e, 0xb7, 0x62, 0x46, 0x9d, 0xbc, 0xfc, 0x32, 0xf5, 0xc3,
	0x3f, 0x1d, 0xb8, 0xb2, 0x77, 0xd6, 0xa4, 0x06, 0x92, 0x27, 0x59, 0x9a, 0xd8, 0xbe, 0xa8, 0xe0,
	0xe9, 0x73, 0x59, 0xcb, 0x06, 0xe4, 0xcd, 0xbe, 0x91, 0x4a, 0x8d, 0xab, 0x6d, 0x8d, 0x4a, 0xcf,
	0xbb, 0xee, 0x90, 0xe5, 0xb7, 0xd0, 0x4e, 0xf1, 0x42, 0xdb, 0x6d, 0xee, 0xfb, 0xb7, 0x81, 0x5d,
	0x87, 0xbd, 0xcd, 0xa0, 0x77, 0x57, 0xe8, 0x67, 0x9a, 0x6b, 0x96, 0x26, 0x9a, 0xf1, 0xdc, 0x0c,
	0xf3, 0x19, 0x77, 0x21, 0x14, 0x47, 0x80, 0x4a, 0x9c, 0x75, 0xb9, 0x0e, 0x46, 0xd9, 0x3d, 0x1a,
	0xe5, 0x3f, 0x1c, 0x68, 0x3e, 0xb0, 0x7c, 0x79, 0x66, 0xe7, 0xfb, 0xe3, 0x70, 0xab, 0xc7, 0xf1,
	0x35, 0x00, 0x4e, 0x8b, 0x55, 0xf5, 0x02, 0x55, 0xed, 0x55, 0x0f, 0x1c, 0xa7, 0x33, 0xf2, 0x70,
	0x11, 0x4a, 0x3a, 0x82, 0xe6, 0x03, 0xcf, 0x97, 0x67, 0xf2, 0x0e, 0x7f, 0x87, 0xee, 0xd6, 0xf0,
	0x86, 0xeb, 0xec, 0x5c, 0x72, 0x5f, 0x41, 0x2b, 0x5d, 0x67, 0xfb, 0xab, 0xd1, 0xdd, 0x93, 0x18,
	0xce, 0x26, 0x93, 0xbb, 0xe9, 0xfd, 0xf8, 0x3e, 0x6a, 0xa6, 0xeb, 0x0c, 0x29, 0xfc, 0x5d, 0xb3,
	0xc3, 0x41, 0xe5, 0x0b, 0x79, 0x0f, 0x19, 0xc0, 0x75, 0xca, 0xf3, 0x3c, 0xc6, 0x3d, 0xa7, 0x08,
	0xdc, 0x33, 0xcb, 0x77, 0x21, 0xde, 0xf8, 0xcf, 0xe0, 0x72, 0xef, 0x0d, 0x4b, 0xb9, 0x41, 0xf3,
	0xa8, 0x47, 0x9d, 0x9d, 0x35, 0x2c, 0xe5, 0x81, 0x33, 0x34, 0x0e, 0x9c, 0xa1, 0x0b, 0x35, 0x26,
	0x82, 0x26, 0xda, 0x42, 0x8d, 0x09, 0x42, 0xe0, 0x02, 0x4d, 0xaa, 0x85, 0x40, 0xf8, 0x8d, 0xe6,
	0x66, 0x0c, 0xc3, 0x54, 0x29, 0x1d, 0xa4, 0x85, 0x89, 0xb9, 0x96, 0xa1, 0x84, 0x4e, 0x39, 0x59,
	0x27, 0x0b, 0xf5, 0x1d, 0xf4, 0x4a, 0x3f, 0xac, 0xd0, 0xfe, 0x8f, 0x21, 0x2f, 0xb5, 0x8f, 0x5e,
	0xa9, 0x7d, 0x80, 0x87, 0x13, 0x41, 0x67, 0xb8, 0x2a, 0xf0, 0x21, 0x2c, 0xa5, 0x24, 0xa9, 0x8d,
	0xab, 0x88, 0x0e, 0x22, 0x5e, 0x1f, 0xcc, 0xbf, 0x85, 0xf4, 0xd3, 0xca, 0x7e, 0xc4, 0xec, 0x43,
	0xc7, 0xbe, 0x86, 0x73, 0xaa, 0xcd, 0x55, 0xf3, 0xc1, 0x4d, 0xd7, 0x19, 0x82, 0x78, 0x91, 0xf9,
	0x0c, 0x3f, 0xaf, 0xae, 0x50, 0xc2, 0x1c, 0xab, 0xa4, 0x62, 0xb5, 0x29, 0x1f, 0x7b, 0x1b, 0x7c,
	0x29, 0x00, 0xb6, 0x67, 0x54, 0x28, 0xf2, 0x0a, 0xda, 0xd3, 0xd9, 0xfd, 0x28, 0x7e, 0x9c, 0xde,
	0x0d, 0xde, 0x8e, 0xfc, 0x0f, 0x88, 0x0f, 0x1d, 0x4c, 0x0c, 0x67, 0xd3, 0xe9, 0x68, 0xb8, 0xf0,
	0x9d, 0xdd, 0x92, 0x68, 0xf4, 0xfd, 0x78, 0xbe, 0xf0, 0x6b, 0xe4, 0x12, 0x3c, 0x4c, 0xdc, 0x3d,
	0x2e, 0x7e, 0xf0, 0xdd, 0x7d, 0x68, 0x00, 0x2e, 0x76, 0x00, 0x8b, 0xf1, 0x64, 0x34, 0x7b, 0x5c,
	0xf8, 0xf5, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xf5, 0xf3, 0x46, 0xbf, 0x08, 0x00, 0x00,
}
